<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions
  targetNamespace="http://www.hannonhill.com/ws/ns/AssetOperationService"
  xmlns:impl="http://www.hannonhill.com/ws/ns/AssetOperationService"
  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<!--+
  | WSDL description of AssetOperation Web Service endpoint
  |
  | Authors: Collin VanDyck and Zach Bailey
  | Since : 4.2
  +-->
 <wsdl:types>
  <schema elementFormDefault="qualified"
    targetNamespace="http://www.hannonhill.com/ws/ns/AssetOperationService"
    xmlns="http://www.w3.org/2001/XMLSchema">

    <!-- The operations and their responses -->

    <element name="read">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="identifier" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="readResponse">
      <complexType>
        <sequence>
          <element name="readReturn" type="impl:readResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="delete">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="identifier" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="deleteResponse">
      <complexType>
        <sequence>
          <element name="deleteReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="create">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="asset" type="impl:asset"/>
        </sequence>
      </complexType>
    </element>

    <element name="createResponse">
      <complexType>
        <sequence>
          <element name="createReturn" type="impl:createResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="edit">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="asset" type="impl:asset"/>
        </sequence>
      </complexType>
    </element>

    <!-- Used to move/rename an asset -->
    <element name="move">
      <complexType>
        <sequence>
          <element name="authentication" maxOccurs="1" minOccurs="1" nillable="false" type="impl:authentication"/>
          <!--  REQUIRED: identifier of the asset being moved -->
          <element name="identifier" maxOccurs="1" minOccurs="1" nillable="false" type="impl:identifier"/>
          <!--  REQUIRED: parameters specifying a new name and/or container for the asset -->
          <element name="moveParameters" minOccurs="1" maxOccurs="1" nillable="false" type="impl:moveParameters"/>
          <!--  NOT REQUIRED: workflow configuration to be used when moving -->
          <element name="workflowConfiguration" maxOccurs="1" minOccurs="0" nillable="false" type="impl:workflow-configuration"/>
        </sequence>
      </complexType>
    </element>

    <element name="moveResponse">
      <complexType>
        <sequence>
          <element name="moveReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="editResponse">
      <complexType>
        <sequence>
          <element name="editReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="publish">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" type="impl:authentication"/>
          <element name="publishInformation" minOccurs="1" maxOccurs="1" type="impl:publishInformation"/>
        </sequence>
      </complexType>
    </element>

    <element name="publishResponse">
      <complexType>
        <sequence>
          <element name="publishReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="batch">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1"
            type="impl:authentication"/>
          <element maxOccurs="unbounded" name="operation"
            type="impl:operation"/>
        </sequence>
      </complexType>
    </element>

    <element name="batchResponse">
      <complexType>
        <sequence>
          <element maxOccurs="unbounded" name="batchReturn"
            type="impl:batchResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="search">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="searchInformation" type="impl:searchInformation"/>
        </sequence>
      </complexType>
    </element>

    <element name="searchResponse">
      <complexType>
        <sequence>
          <element name="searchReturn" type="impl:searchResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="readAccessRights">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="identifier" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="readAccessRightsResponse">
      <complexType>
        <sequence>
          <element name="readAccessRightsReturn" type="impl:readAccessRightsResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="editAccessRights">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="accessRightsInformation" minOccurs="1" maxOccurs="1" nillable="false" type="impl:accessRightsInformation"/>
          <element name="applyToChildren" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>
        </sequence>
      </complexType>
    </element>

    <element name="editAccessRightsResponse">
      <complexType>
        <sequence>
          <element name="editAccessRightsReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="readWorkflowSettings">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="identifier" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="readWorkflowSettingsResponse">
      <complexType>
        <sequence>
          <element name="readWorkflowSettingsReturn" type="impl:readWorkflowSettingsResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="editWorkflowSettings">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="workflowSettings" minOccurs="1" maxOccurs="1" nillable="false" type="impl:workflowSettings"/>
          <element name="applyInheritWorkflowsToChildren" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>
          <element name="applyRequireWorkflowToChildren" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>
        </sequence>
      </complexType>
    </element>

    <element name="editWorkflowSettingsResponse">
      <complexType>
        <sequence>
          <element name="editWorkflowSettingsReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="listSubscribers">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="identifier" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="listSubscribersResponse">
      <complexType>
        <sequence>
          <element name="listSubscribersReturn" type="impl:listSubscribersResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="listEditorConfigurations">
      <complexType>
        <sequence>
          <element name="authentication" type="impl:authentication"/>
          <element name="identifier" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="listEditorConfigurationsResponse">
      <complexType>
        <sequence>
          <element name="listEditorConfigurationsReturn" type="impl:listEditorConfigurationsResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="listMessages">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
        </sequence>
      </complexType>
    </element>

    <element name="listMessagesResponse">
      <complexType>
        <sequence>
          <element name="listMessagesReturn" type="impl:listMessagesResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="markMessage">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
          <element name="markType" minOccurs="1" maxOccurs="1" nillable="false" type="impl:message-mark-type"/>
        </sequence>
      </complexType>
    </element>

    <element name="markMessageResponse">
      <complexType>
        <sequence>
          <element name="markMessageReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="deleteMessage">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="deleteMessageResponse">
      <complexType>
        <sequence>
          <element name="deleteMessageReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="sendMessage">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="message" minOccurs="1" maxOccurs="1" nillable="false" type="impl:message"/>
        </sequence>
      </complexType>
    </element>

    <element name="sendMessageResponse">
      <complexType>
        <sequence>
          <element name="sendMessageReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="checkOut">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="checkOutResponse">
      <complexType>
        <sequence>
          <element name="checkOutReturn" type="impl:checkOutResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="checkIn">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
          <element name="comments" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:string"/>
        </sequence>
      </complexType>
    </element>

    <element name="checkInResponse">
      <complexType>
        <sequence>
          <element name="checkInReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="copy">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
          <element name="copyParameters" minOccurs="1" maxOccurs="1" nillable="false" type="impl:copyParameters"/>
          <element name="workflowConfiguration" maxOccurs="1" minOccurs="0" nillable="false" type="impl:workflow-configuration"/>
        </sequence>
      </complexType>
    </element>

    <element name="copyResponse">
      <complexType>
        <sequence>
          <element name="copyReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="siteCopy">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>

          <!-- ONE REQUIRED: The id or name of the site that needs to be copied. If both id and name is provided, id will be used. -->
          <element name="originalSiteId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
          <element name="originalSiteName" minOccurs="0" maxOccurs="1" type="xsd:string"/>

          <!-- REQUIRED: The name of the new site -->
          <element name="newSiteName" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:string"/>
        </sequence>
      </complexType>
    </element>

    <element name="siteCopyResponse">
      <complexType>
        <sequence>
          <element name="siteCopyReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="listSites">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
        </sequence>
      </complexType>
    </element>

    <element name="listSitesResponse">
      <complexType>
        <sequence>
          <element name="listSitesReturn" type="impl:listSitesResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="readAudits">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="auditParameters" minOccurs="1" maxOccurs="1" nillable="false" type="impl:auditParameters"/>
        </sequence>
      </complexType>
    </element>

    <element name="readAuditsResponse">
      <complexType>
        <sequence>
          <element name="readAuditsReturn" type="impl:readAuditsResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="readWorkflowInformation">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        </sequence>
      </complexType>
    </element>

    <element name="readWorkflowInformationResponse">
      <complexType>
        <sequence>
          <element name="readWorkflowInformationReturn" type="impl:readWorkflowInformationResult"/>
        </sequence>
      </complexType>
    </element>

    <element name="performWorkflowTransition">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="workflowTransitionInformation" minOccurs="1" maxOccurs="1" nillable="false" type="impl:workflowTransitionInformation"/>
        </sequence>
      </complexType>
    </element>

    <element name="performWorkflowTransitionResponse">
      <complexType>
        <sequence>
          <element name="performWorkflowTransitionReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

  <element name="readPreferences">
     <complexType>
       <sequence>
         <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
       </sequence>
     </complexType>
  </element>

  <element name="readPreferencesResponse">
    <complexType>
      <sequence>
        <element name="readPreferencesReturn" type="impl:readPreferencesResult"/>
      </sequence>
    </complexType>
  </element>

    <element name="editPreference">
      <complexType>
        <sequence>
          <element name="authentication" minOccurs="1" maxOccurs="1" nillable="false" type="impl:authentication"/>
          <element name="preference" minOccurs="1" maxOccurs="1" nillable="false" type="impl:preference"/>
        </sequence>
      </complexType>
    </element>

    <element name="editPreferenceResponse">
      <complexType>
        <sequence>
          <element name="editPreferenceReturn" type="impl:operationResult"/>
        </sequence>
      </complexType>
    </element>

    <!-- General elements present in operations and results -->

    <complexType name="authentication">
      <sequence>
        <element name="password" nillable="false" type="xsd:string"/>
        <element name="username" nillable="false" type="xsd:string"/>
      </sequence>
    </complexType>

    <complexType name="identifier">
      <sequence>
        <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
           in case if the selected asset gets restored from the recycle bin.
           One is REQUIRED -->
        <element name="id" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <!-- Path works only for non-recycled assets -->
        <element name="path" maxOccurs="1" minOccurs="0" type="impl:path"/>

        <element name="type" minOccurs="1" maxOccurs="1" type="impl:entityTypeString"/>
        <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
        <element name="recycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <complexType name="path">
      <sequence>
      <!--  When reading a site, the "path" element should be populated with the
          site's name -->
        <element name="path" maxOccurs="1" type="xsd:string"/>

        <!-- NOT REQUIRED -->
        <element name="siteId" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true"/>
        <element name="siteName" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true"/>
      </sequence>
    </complexType>

    <complexType name="user-group-identifier">
      <sequence>
        <!-- the username or group name -->
        <element name="name" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- the type: "user" or "group" -->
        <element name="type" minOccurs="1" maxOccurs="1" type="impl:entityTypeString"/>
      </sequence>
    </complexType>

    <!-- Represents a message within the system -->
    <complexType name="message">
      <complexContent>
        <extension base="impl:base-asset">
          <sequence>
            <!-- Who the message was/will be sent to. -->
            <element name="to" maxOccurs="1" minOccurs="1" nillable="false" type="xsd:string"/>
            <!-- Who sent the message - not necessary when sending a message -->
            <element name="from" maxOccurs="1" minOccurs="0" nillable="false" type="xsd:string"/>
            <!-- The subject - required -->
            <element name="subject" maxOccurs="1" minOccurs="1" nillable="false" type="xsd:string"/>
            <!-- The date the message was sent - not necessary when sending a message -->
            <element name="date" maxOccurs="1" minOccurs="0" nillable="false" type="xsd:dateTime"/>
            <!-- The body of the message -->
            <element name="body" maxOccurs="1" minOccurs="1" nillable="false" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- For marking messages - read or unread -->
    <simpleType name="message-mark-type">
      <restriction base="xsd:string">
        <enumeration value="read"/>
        <enumeration value="unread"/>
      </restriction>
    </simpleType>

    <!-- The fields available when doing a search via SOAP -->
    <complexType name="searchInformation">
      <sequence>
        <element name="searchTerms" maxOccurs="1" minOccurs="1" type="xsd:string"/>
        <!-- Id or name of the site to search
          NOT REQUIRED, if left blank, all sites will be searched -->
        <element name="siteId" maxOccurs="1" minOccurs="0" nillable="false" type="xsd:string"/>
        <element name="siteName" maxOccurs="1" minOccurs="0" nillable="false" type="xsd:string"/>
        <!-- Asset fields to search (e.g. name, title, content), see searchField simpleType for valid values
          NOT REQUIRED -->
        <element name="searchFields" minOccurs="0" maxOccurs="1" nillable="false" type="impl:searchFields"/>
        <!-- Asset types to search (e.g. page, folder, site)
          NOT REQUIRED, if left blank, all asset types will be searched -->
        <element name="searchTypes" minOccurs="0" maxOccurs="1" nillable="false" type="impl:searchTypes"/>
      </sequence>
    </complexType>

    <complexType name="searchFields">
      <sequence>
        <element name="searchField" minOccurs="0" maxOccurs="unbounded" nillable="false" type="impl:searchFieldString"/>
      </sequence>
    </complexType>

    <complexType name="searchTypes">
      <sequence>
        <element name="searchType" minOccurs="0" maxOccurs="unbounded" nillable="false" type="impl:entityTypeString"/>
      </sequence>
    </complexType>

    <simpleType name="searchFieldString">
      <restriction base="xsd:string">
       <!-- Basic fields -->
        <enumeration value="name"/>
        <enumeration value="path"/>
        <enumeration value="createdBy"/>
        <enumeration value="modifiedBy"/>
        <!-- Metadata fields -->
        <enumeration value="displayName"/>
        <enumeration value="title"/>
        <enumeration value="summary"/>
        <enumeration value="teaser"/>
        <enumeration value="keywords"/>
        <enumeration value="description"/>
        <enumeration value="author"/>
        <!-- File content -->
        <enumeration value="blob"/>
        <!-- Velocity Format content  -->
        <enumeration value="velocityFormatContent"/>
        <!-- WYSIWYG and Data Definition Page content, Text and XML Block content, Template content,
          XSLT Format content -->
        <enumeration value="xml"/>
        <!-- Symlink link text field -->
        <enumeration value="link"/>
      </restriction>
    </simpleType>

    <!-- Parameters when copying an asset -->
    <complexType name="copyParameters">
      <sequence>
        <element name="destinationContainerIdentifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        <element name="doWorkflow" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:boolean"/>
        <element name="newName" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- Parameters used when moving an asset -->
    <complexType name="moveParameters">
      <sequence>
        <!--  NOT REQUIRED: the container into which the asset will be moved
            if left empty, asset will remain in its current container -->
        <element name="destinationContainerIdentifier" minOccurs="0" maxOccurs="1" type="impl:identifier"/>
        <element name="doWorkflow" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:boolean"/>
        <!--  NOT REQUIRED: name to give the asset
            if left empty asset's name will not be changed  -->
        <element name="newName" minOccurs="0" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- Parameters when getting the audits from the system -->
    <complexType name="auditParameters">
      <sequence>
        <!-- Filter the assets by a certain entity
           NOT REQUIRED -->
        <element name="identifier" minOccurs="0" maxOccurs="1" type="impl:identifier"/>
        <!-- Filter the audits by a given user name
           NOT REQUIRED -->
        <element name="username" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- Filter the audits by a given group name. The audits
           for all users in the group will be returned
           NOT REQUIRED -->
        <element name="groupname" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- Filter the audits by a given role.
           NOT REQUIRED -->
        <element name="rolename" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- Filter the audits by a start time. Only audits for
           events that happened after this time will be included.
           NOT REQUIRED -->
        <element name="startDate" minOccurs="0" maxOccurs="1" type="xsd:dateTime"/>
        <!-- Filter the audits by an end time. Only audits for
           events that happened before this time will be included.
           NOT REQUIRED -->
        <element name="endDate" minOccurs="0" maxOccurs="1" type="xsd:dateTime"/>
        <!-- Filter the audits by an audit type. Only audits of this
           type will be returned in the response
           NOT REQUIRED -->
        <element name="auditType" minOccurs="0" maxOccurs="1" type="impl:auditTypes"/>
      </sequence>
    </complexType>

    <!-- Represents the different kinds of audits in the system -->
    <simpleType name="auditTypes">
      <restriction base="xsd:string">
        <enumeration value="login"/>
        <enumeration value="login_failed"/>
        <enumeration value="logout"/>
        <enumeration value="start_workflow"/>
        <enumeration value="advance_workflow"/>
        <enumeration value="edit"/>
        <enumeration value="copy"/>
        <enumeration value="create"/>
        <enumeration value="reference"/>
        <enumeration value="delete"/>
        <enumeration value="delete_unpublish"/>
        <enumeration value="check_in"/>
        <enumeration value="check_out"/>
        <enumeration value="activate_version"/>
        <enumeration value="publish"/>
        <enumeration value="unpublish"/>
        <enumeration value="recycle"/>
        <enumeration value="restore"/>
        <enumeration value="move"/>
      </restriction>
    </simpleType>

    <complexType name="readAuditsResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="audits" minOccurs="1" maxOccurs="1" type="impl:audits"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- An array of audits -->
    <complexType name="audits">
      <sequence>
        <element name="audit" minOccurs="0" maxOccurs="unbounded" type="impl:audit"/>
      </sequence>
    </complexType>

    <!-- Represents a single audit -->
    <complexType name="audit">
      <sequence>
        <!-- The user that performed the audited action -->
        <element name="user" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The type of action the user performed -->
        <element name="action" minOccurs="1" maxOccurs="1" type="impl:auditTypes"/>
        <!-- The identifier identifying the asset the action was performed on, if any -->
        <element name="identifier" minOccurs="0" maxOccurs="1" type="impl:identifier"/>
        <!-- The date and time the action was performed -->
        <element name="date" minOccurs="1" maxOccurs="1" type="xsd:dateTime"/>
      </sequence>
    </complexType>

    <!-- For performing a workflow transition -->
    <complexType name="workflowTransitionInformation">
      <sequence>
        <!-- REQUIRED: The id of the workflow to perform the transition on -->
        <element name="workflowId" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- REQUIRED: The identifier of the action to transition to -->
        <element name="actionIdentifier" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- NOT REQUIRED: The user's comment about the transition taken -->
        <element name="transitionComment" minOccurs="0" maxOccurs="1" nillable="true" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- all asset type strings -->
    <simpleType name="entityTypeString">
      <restriction base="xsd:string">
        <enumeration value="assetfactory"/>
        <enumeration value="assetfactorycontainer"/>
        <enumeration value="block"/>
        <enumeration value="block_FEED"/>
        <enumeration value="block_INDEX"/>
        <enumeration value="block_TEXT"/>
        <enumeration value="block_XHTML_DATADEFINITION"/>
        <enumeration value="block_XML"/>
        <enumeration value="block_TWITTER_FEED" />
        <enumeration value="connectorcontainer"/>
        <enumeration value="twitterconnector"/>
        <enumeration value="facebookconnector"/>
        <enumeration value="wordpressconnector"/>
        <enumeration value="googleanalyticsconnector"/>
        <enumeration value="contenttype"/>
        <enumeration value="contenttypecontainer"/>
        <enumeration value="destination"/>
        <enumeration value="editorconfiguration"/>
        <enumeration value="file"/>
        <enumeration value="folder"/>
        <enumeration value="group"/>
        <enumeration value="message"/>
        <enumeration value="metadataset"/>
        <enumeration value="metadatasetcontainer"/>
        <enumeration value="page"/>
        <enumeration value="pageconfigurationset"/>
        <enumeration value="pageconfiguration"/>
        <enumeration value="pageregion"/>
        <enumeration value="pageconfigurationsetcontainer"/>
        <enumeration value="publishset"/>
        <enumeration value="publishsetcontainer"/>
        <enumeration value="reference"/>
        <enumeration value="role"/>
        <enumeration value="datadefinition"/>
        <enumeration value="datadefinitioncontainer"/>
        <enumeration value="sharedfield"/>
        <enumeration value="sharedfieldcontainer"/>
        <enumeration value="format"/>
        <enumeration value="format_XSLT"/>
        <enumeration value="format_SCRIPT"/>
        <enumeration value="site"/>
        <enumeration value="sitedestinationcontainer"/>
        <enumeration value="symlink"/>
        <enumeration value="target"/>
        <enumeration value="template"/>
        <enumeration value="transport"/>
        <enumeration value="transport_fs"/>
        <enumeration value="transport_ftp"/>
        <enumeration value="transport_db"/>
        <enumeration value="transport_cloud"/>
        <enumeration value="transportcontainer"/>
        <enumeration value="user"/>
        <enumeration value="workflow"/>
        <enumeration value="workflowdefinition"/>
        <enumeration value="workflowdefinitioncontainer"/>
      </restriction>
    </simpleType>

    <!-- The result classes -->

    <!-- The base operation result class contains two members, success which
       will either be "true" or "false" and a message, which when success is
       "false" will contain a descriptive error message of why the operation failed. -->

    <complexType name="batchResult">
      <choice>
        <element name="operationResult" maxOccurs="1" minOccurs="1" type="impl:operationResult"/>
        <element name="checkOutResult" maxOccurs="1" minOccurs="1" type="impl:checkOutResult"/>
        <element name="createResult" maxOccurs="1" minOccurs="1" type="impl:createResult"/>
        <element name="listMessagesResult" maxOccurs="1" minOccurs="1" type="impl:listMessagesResult"/>
        <element name="readResult" maxOccurs="1" minOccurs="1" type="impl:readResult"/>
        <element name="readAccessRightsResult" maxOccurs="1" minOccurs="1" type="impl:readAccessRightsResult"/>
        <element name="readWorkflowSettingsResult" maxOccurs="1" minOccurs="1" type="impl:readWorkflowSettingsResult"/>
        <element name="readAuditsResult" maxOccurs="1" minOccurs="1" type="impl:readAuditsResult"/>
        <element name="listSubscribersResult" maxOccurs="1" minOccurs="1" type="impl:listSubscribersResult"/>
        <element name="searchResult" maxOccurs="1" minOccurs="1" type="impl:searchResult"/>
        <element name="readWorkflowInformationResult" maxOccurs="1" minOccurs="1" type="impl:readWorkflowInformationResult"/>
      </choice>
    </complexType>

    <complexType name="operationResult">
      <sequence>
        <element name="success" maxOccurs="1" type="xsd:string"/>
        <element name="message" nillable="true" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- When creating an asset, this will contain the ID of the created asset -->
    <complexType name="createResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="createdAssetId" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="readResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="asset" minOccurs="1" maxOccurs="1" type="impl:asset"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- A search result -->
    <complexType name="searchResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="matches" minOccurs="1" maxOccurs="1" type="impl:search-matches"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- An array of identifiers for assets that matched
       the search -->
    <complexType name="search-matches">
      <sequence>
        <element name="match" maxOccurs="unbounded" minOccurs="0" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="listSitesResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="sites" minOccurs="1" maxOccurs="1" type="impl:assetIdentifiers"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- A result of reading the access rights of an asset -->
    <complexType name="readAccessRightsResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="accessRightsInformation" minOccurs="1" maxOccurs="1" nillable="false" type="impl:accessRightsInformation"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Complete information about the access rights of an asset or component -->
    <complexType name="accessRightsInformation">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        <element name="aclEntries" minOccurs="0" maxOccurs="1" nillable="false" type="impl:acl-entries"/>
        <element name="allLevel" minOccurs="1" maxOccurs="1" nillable="false" type="impl:all-level"/>
      </sequence>
    </complexType>

    <!-- Array wrapper for access control list entries -->
    <complexType name="acl-entries">
      <sequence>
        <element name="aclEntry" minOccurs="0" maxOccurs="unbounded" nillable="false" type="impl:aclEntry"/>
      </sequence>
    </complexType>

    <!-- A single access control list entry -->
    <complexType name="aclEntry">
      <sequence>
        <!-- the level, "read" or "write" -->
        <element name="level" minOccurs="1" maxOccurs="1" nillable="false" type="impl:acl-entry-level"/>
        <!-- the type of acl entry, "user" or "group" -->
        <element name="type" minOccurs="1" maxOccurs="1" nillable="false" type="impl:acl-entry-type"/>
        <!-- the name of the user or group -->
        <element name="name" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:string"/>
      </sequence>
    </complexType>

    <simpleType name="all-level">
      <restriction base="xsd:string">
        <enumeration value="none"/>
        <enumeration value="read"/>
        <enumeration value="write"/>
      </restriction>
    </simpleType>

    <simpleType name="acl-entry-level">
      <restriction base="xsd:string">
        <enumeration value="read"/>
        <enumeration value="write"/>
      </restriction>
    </simpleType>

    <simpleType name="acl-entry-type">
      <restriction base="xsd:string">
        <enumeration value="user"/>
        <enumeration value="group"/>
      </restriction>
    </simpleType>

    <!-- A result of reading the workflow information of a folder -->
    <complexType name="readWorkflowSettingsResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="workflowSettings" minOccurs="1" maxOccurs="1" nillable="false" type="impl:workflowSettings"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Complete data with the workflow settings of a folder -->
    <complexType name="workflowSettings">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        <element name="workflowDefinitions" minOccurs="0" maxOccurs="1" nillable="false" type="impl:assetIdentifiers"/>
        <element name="inheritWorkflows" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>
        <element name="requireWorkflow" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>

        <!-- Ignored on edit -->
        <element name="inheritedWorkflowDefinitions" minOccurs="0" maxOccurs="1" nillable="false" type="impl:assetIdentifiers"/>
      </sequence>
    </complexType>

    <complexType name="listSubscribersResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="subscribers" minOccurs="1" maxOccurs="1" type="impl:assetIdentifiers"/>
            <element name="manualSubscribers" minOccurs="1" maxOccurs="1" type="impl:assetIdentifiers"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="listEditorConfigurationsResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="editorConfigurations" minOccurs="1" maxOccurs="1" type="impl:assetIdentifiers"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Array wrapper for multiple identifiers of assets -->
    <complexType name="assetIdentifiers">
      <sequence>
        <element name="assetIdentifier" minOccurs="0" maxOccurs="unbounded" nillable="false" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="listMessagesResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="messages" minOccurs="0" maxOccurs="1" nillable="true" type="impl:messagesList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="messagesList">
      <sequence>
        <element name="message" minOccurs="0" maxOccurs="unbounded" nillable="false" type="impl:message"/>
      </sequence>
    </complexType>

    <complexType name="checkOutResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="workingCopyIdentifier" minOccurs="0" maxOccurs="1" nillable="true" type="impl:identifier"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="editPreferenceResult">
       <sequence>
        <element name="preference" minOccurs="1" maxOccurs="1" nillable="false" type="impl:preference"/>
      </sequence>
    </complexType>

    <complexType name="readPreferencesResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="preferences" minOccurs="1" maxOccurs="1" nillable="true" type="impl:preferencesList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="preferencesList">
      <sequence>
        <element name="preference" maxOccurs="unbounded" minOccurs="0" nillable="false" type="impl:preference"/>
      </sequence>
    </complexType>

    <complexType name="readWorkflowInformationResult">
      <complexContent>
        <extension base="impl:operationResult">
          <sequence>
            <element name="workflow" minOccurs="0" maxOccurs="1" type="impl:workflow"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Represents a workflow instance in progress -->
    <complexType name="workflow">
      <complexContent>
        <extension base="impl:named-asset">
          <sequence>
            <!-- The asset that is in this workflow -->
            <element name="relatedEntity" maxOccurs="1" minOccurs="1" type="impl:identifier"/>
            <!-- The current step this workflow is at -->
            <element name="currentStep" maxOccurs="1" minOccurs="1" type="xsd:string"/>
            <!-- The ordered steps of this workflow -->
            <element name="orderedSteps" maxOccurs="1" minOccurs="0" type="impl:workflowSteps"/>
            <!-- The unordered steps of this workflow -->
            <element name="unorderedSteps" maxOccurs="1" minOccurs="0" type="impl:workflowSteps"/>
            <!-- The date when the workflow was initialized -->
            <element name="startDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>
            <!--  The due date of the workflow -->
            <element name="endDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- An array of workflowStep objects -->
    <complexType name="workflowSteps">
      <sequence>
        <element name="step" maxOccurs="unbounded" minOccurs="0" type="impl:workflowStep"/>
      </sequence>
    </complexType>

    <!-- A single workflow step -->
    <complexType name="workflowStep">
      <sequence>
        <!-- The unique name of this step -->
        <element name="identifier" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The display label for this step -->
        <element name="label" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The type of step ("system", "edit", or "transition" -->
        <element name="stepType" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The owner (user or group name) of this step -->
        <element name="owner" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The actions this step contains -->
        <element name="actions" minOccurs="0" maxOccurs="1" type="impl:workflowActions"/>
      </sequence>
    </complexType>

    <!-- An array of workflowAction objects -->
    <complexType name="workflowActions">
      <sequence>
        <element name="action" minOccurs="1" maxOccurs="unbounded" type="impl:workflowAction"/>
      </sequence>
    </complexType>

    <!-- A single workflow action -->
    <complexType name="workflowAction">
      <sequence>
        <!-- The unique name of this action -->
        <element name="identifier" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The display label for this action -->
        <element name="label" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- the type of action: reverse, forward, next-id -->
        <element name="actionType" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The id of the step that will result when this action is chosen by the user -->
        <element name="nextId" minOccurs="1" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- The Cascade Server Asset Hierarchy -->

    <!-- All assets inherit from base asset -->
    <complexType name="base-asset">
      <sequence>
        <!-- The id of the asset. When creating, this should not be present
           as an asset does not have an id until it is created. When editing,
           specify this to uniquely identify an asset -->
        <element name="id" minOccurs="0" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- All assets have a name -->
    <complexType name="named-asset">
      <complexContent>
        <extension base="impl:base-asset">
          <sequence>
            <!-- The name of the asset
               REQUIRED on create, ignored on edit.  User move operation to rename an asset.-->
            <element name="name" maxOccurs="1" minOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Representing all home-area assets that are contained in a folder -->
    <complexType name="folder-contained-asset">
      <complexContent>
        <extension base="impl:named-asset">
          <sequence>
            <!-- The parent folder relationship. REQUIRED on create, ignored on edit.  Use move
              operation to change parent folder after an asset has been created
              Priority: parentFolderId > parentFolderPath
              One is REQUIRED -->
            <element name="parentFolderId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="parentFolderPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- The path of an asset. This is the other way (in addition to the id)
               to uniquely identify an asset. When creating this will be left blank.
               When editing, specify this to uniquely identify an asset. -->
            <element name="path" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- When this asset was last modified. Read only.
               NOT REQUIRED -->
            <element name="lastModifiedDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>

            <!-- Who last modified this asset. Read only.
               NOT REQUIRED -->
            <element name="lastModifiedBy" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>

            <!-- When this asset was created. Read only.
              NOT REQUIRED -->
            <element name="createdDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>

            <!-- Who created this asset. Read only.
              NOT REQUIRED -->
            <element name="createdBy" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>

            <!-- The Site in which the asset is located
               One is REQUIRED -->
            <element name="siteId" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <element name="siteName" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <!-- Content Tags assigned to the asset
              NOT REQUIRED -->
            <element name="tags" maxOccurs="1" minOccurs="0" nillable="true" type="impl:tags"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="tags">
      <sequence>
        <element name="tag" minOccurs="0" maxOccurs="unbounded" nillable="true" type="impl:tag"/>
      </sequence>
    </complexType>

    <complexType name="tag">
      <sequence>
        <element name="name" minOccurs="0" maxOccurs="1" nillable="true" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- The following concrete types extend folder-contained-asset -->
    <complexType name="reference">
      <complexContent>
        <extension base="impl:folder-contained-asset">
          <sequence>
            <!-- For defining the referenced asset relationship
               Priority: referencedAssetId > referencedAssetPath
               One is REQUIRED -->
            <element name="referencedAssetId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="referencedAssetPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- The type of the referenced asset
               REQUIRED -->
            <element name="referencedAssetType" minOccurs="1" maxOccurs="1" type="impl:entityTypeString"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="xsltFormat">
      <complexContent>
        <extension base="impl:folder-contained-asset">
          <sequence>
            <!-- The XML content of the xslt format
               REQUIRED -->
            <element name="xml" maxOccurs="1" minOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="scriptFormat">
      <complexContent>
        <extension base="impl:folder-contained-asset">
          <sequence>
            <!-- The script content of the scriptFormat
               REQUIRED -->
            <element name="script" maxOccurs="1" minOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="template">
      <complexContent>
        <extension base="impl:folder-contained-asset">
          <sequence>
            <!-- For defining the target relationship
               Priority: targetId > targetPath
               NOT REQUIRED when template is inside of site
               REQUIRED when template is in global area -->
              <element name="targetId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
              <element name="targetPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- The overall xslt format (and ONLY xslt) applied to this template
               NOT REQUIRED default none -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin. -->
            <element name="formatId" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="formatPath" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="formatRecycled" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:boolean"/>
            <!-- The XHTML content of the template -->
            <element name="xml" maxOccurs="1" type="xsd:string"/>
            <!-- The page regions and their block/xslt format assignments for this template
               NOT REQUIRED default: all regions empty -->
            <element name="pageRegions" maxOccurs="1" minOccurs="0" type="impl:page-regions"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- END concrete types extending folder-contained-asset -->

    <!-- All system area assets are "containered" -->
    <complexType name="containered-asset">
      <complexContent>
        <extension base="impl:named-asset">
          <sequence>
            <!-- For defining the container relationship
               Priority: parentContainerId > parentContainerPath
               One is REQUIRED on create, ignored on edit.  Use move operation to move an asset after it has been created -->
            <element name="parentContainerId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="parentContainerPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- The path of an asset. This is the other way (in addition to the id)
               to uniquely identify an asset. When creating this will be left blank.
               When editing, specify this to uniquely identify an asset. -->
            <element name="path" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- The site in which the asset is located
               Priority: siteId > siteName
               One is REQUIRED -->
            <element name="siteId" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <element name="siteName" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Most of the following concrete types extend containered-asset -->
    <!-- These are all the Administrative area assets -->

    <!-- A role -->
    <complexType name="role">
      <complexContent>
        <extension base="impl:named-asset">
            <sequence>
                <!-- The type of the role
                   NOT REQUIRED -->
                <element maxOccurs="1" minOccurs="1" name="roleType" type="impl:role-types"/>
                <!-- The global or site abilities for the role - use correct one depending on the type of the role
                   REQUIRED -->
                <choice>
                  <element name="globalAbilities" minOccurs="1" maxOccurs="1" type="impl:global-abilities"/>
                  <element name="siteAbilities" minOccurs="1" maxOccurs="1" type="impl:site-abilities"/>
                </choice>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

     <!-- The types of roles. -->
    <simpleType name="role-types">
      <restriction base="xsd:string">
        <enumeration value="site"/>
        <enumeration value="global"/>
      </restriction>
    </simpleType>

    <!-- global role abilities -->
    <complexType name="global-abilities">
      <sequence>
        <!-- NOT REQUIRED - default false -->
        <element name="bypassAllPermissionsChecks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessSiteManagement" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="createSites" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editAccessRights" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessAudits" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessAllSites" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="viewSystemInfoAndLogs" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="forceLogout" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="diagnosticTests" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessSecurityArea" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="optimizeDatabase" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="syncLdap" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="configureLogging" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="searchingIndexing" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessConfiguration" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editSystemPreferences" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="broadcastMessages" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="viewUsersInMemberGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="viewAllUsers" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="createUsers" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="deleteUsersInMemberGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="deleteAllUsers" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="viewMemberGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="viewAllGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="createGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="deleteMemberGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessRoles" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="createRoles" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="deleteAnyGroup" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editAnyUser" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editUsersInMemberGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editAnyGroup" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editMemberGroups" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="databaseExportTool" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="changeIdentity" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessDefaultEditorConfiguration" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="modifyDictionary" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <!-- site role abilities -->
    <complexType name="site-abilities">
      <sequence>
        <!-- NOT REQUIRED - default false -->
        <element name="bypassAllPermissionsChecks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="uploadImagesFromWysiwyg" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="multiSelectCopy" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="multiSelectPublish" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="multiSelectMove" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="multiSelectDelete" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editPageLevelConfigurations" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editPageContentType" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editDataDefinition" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="publishReadableHomeAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="publishWritableHomeAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="editAccessRights" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="viewVersions" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="activateDeleteVersions" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessAudits" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="bypassWorkflow" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="assignApproveWorkflowSteps" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="deleteWorkflows" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="breakLocks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="assignWorkflowsToFolders" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="bypassAssetFactoryGroupsNewMenu" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="bypassDestinationGroupsWhenPublishing" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="bypassWorkflowDefintionGroupsForFolders" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessManageSiteArea" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessAssetFactories" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessConfigurationSets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessDataDefinitions" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessSharedFields" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessMetadataSets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessPublishSets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessDestinations" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessTransports" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessWorkflowDefinitions" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessContentTypes" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessConnectors" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="publishReadableAdminAreaAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="publishWritableAdminAreaAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="importZipArchive" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="bulkChange" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="recycleBinViewRestoreUserAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="recycleBinDeleteAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="recycleBinViewRestoreAllAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="moveRenameAssets" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="diagnosticTests" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="alwaysAllowedToToggleDataChecks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="viewPublishQueue" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="reorderPublishQueue" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="cancelPublishJobs" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="sendStaleAssetNotifications" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="brokenLinkReportAccess" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="brokenLinkReportMarkFixed" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="accessEditorConfigurations" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- NOT REQUIRED - default false -->
        <element name="bypassWysiwygEditorRestrictions" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <!-- A user -->
    <complexType name="user">
      <sequence>
        <!-- the username of the user
           REQUIRED -->
        <element name="username" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- the full name of the user
           REQUIRED -->
        <element name="fullName" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- the user's email
           REQUIRED -->
        <element name="email" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- the way the user is authenticated
           REQUIRED -->
        <element name="authType" minOccurs="1" maxOccurs="1" type="impl:user-auth-types"/>
        <!-- The password for this user
           when authtype is custom, this is not used
           REQUIRED -->
        <element name="password" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- Whether or not this user is enabled
           NOT REQUIRED default false -->
        <element name="enabled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- A semi-colon separated list of groups this user is a member of
           REQUIRED -->
        <element name="groups" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- This user's roles
           REQUIRED -->
        <element name="role" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!--  Default Site for the user, defaultSiteId takes precedence if both fields are set
          NOT REQUIRED -->
        <element name="defaultSiteId" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true"/>
        <element name="defaultSiteName" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true"/>
        <!-- This user's ldapDN
           REQUIRED if authType is ldap; otherwise, NOT REQUIRED -->
        <element name="ldapDN" minOccurs="0" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- The various ways a user can be authenticated in
       Cascade Server. -->
    <simpleType name="user-auth-types">
      <restriction base="xsd:string">
        <!-- Normal authentication against information
           stored in Cascade Server itself -->
        <enumeration value="normal"/>
        <!-- Cascade server will delegate to an LDAP
           server for the authentication process -->
        <enumeration value="ldap"/>
        <!-- Custom module written to authenticate (SSO,
           for example) -->
        <enumeration value="custom"/>
      </restriction>
    </simpleType>

    <!-- A group -->
    <complexType name="group">
      <sequence>
        <!-- The name of the group
           REQUIRED -->
        <element name="groupName" minOccurs="1" maxOccurs="1" type="xsd:string"/>

        <!-- Semi-colon delimited list of all of the member users of this
           group -->
        <element name="users" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- The Roles for this group. Note that this role will also
           apply to all the members, possibly adding roles for those users -->
        <element name="role" minOccurs="1" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <complexType name="site">
      <complexContent>
        <extension base="impl:named-asset">
          <sequence>
            <!-- The site url REQUIRED-->
            <element name="url" minOccurs="1" maxOccurs="1" type="xsd:string"/>

            <!-- The SiteImprove url to use when sending url data to SiteImprove. NOT REQUIRED -->
            <element name="siteImproveUrl" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- A comma separated list of extensions that should be stripped from cross-site links pointing to assets in this site.
               NOT REQUIRED default: empty -->
            <element name="extensionsToStrip" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true" />

            <!-- The default metadata set for the site
               Priority: defaultMetadataSetId > defaultMetadataSetPath
               NOT REQUIRED -->
            <element name="defaultMetadataSetId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="defaultMetadataSetPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- Define the site asset factory container relationship here
               This asset factory container will determine which asset factories
               show on that user's dashboard under the "My New Content Wizards" section in the site.
               NOT REQUIRED default: none -->

            <!-- Priority: siteAssetFactoryContainerId > siteAssetFactoryContainerPath
               NOT REQUIRED -->
            <element name="siteAssetFactoryContainerId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="siteAssetFactoryContainerPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- Priority: defaultEditorConfigurationId > defaultEditorConfigurationPath
               NOT REQUIRED -->
            <element name="defaultEditorConfigurationId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="defaultEditorConfigurationPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- Define the site starting page relationship here
               This starting page will override the global starting page set in
               the system preferences
               Priority: siteStartingPageId > siteStartingPagePath
               NOT REQUIRED default: none -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin. -->
            <element name="siteStartingPageId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="siteStartingPagePath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="siteStartingPageRecycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <element name="roleAssignments" minOccurs="0" maxOccurs="1" type="impl:role-assignments"/>
            <!-- Whether or not to publish this set on a schedule
               NOT REQUIRED default: false -->
            <element name="usesScheduledPublishing" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
           <!-- Scheduled publish destination selection mode, see "scheduledDestinationMode" simpleType for acceptable values
              NOT REQUIRED
            -->
            <element name="scheduledPublishDestinationMode" minOccurs="0" maxOccurs="1" type="impl:scheduledDestinationMode" nillable="true"/>
            <!-- Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly
              NOT REQUIRED
            -->
            <element name="scheduledPublishDestinations" minOccurs="0" maxOccurs="1" type="impl:destination-list"/>
            <!-- The base time this set will be published. For example if one wanted
               this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
               one of those times here and set the "publishInterval" to 4, and the
               "publishIntervalUnits" to "hours"
               NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored -->
            <element name="timeToPublish" minOccurs="0" maxOccurs="1" type="xsd:time"/>
            <!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
               going to be used.
               One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored-->
            <choice>
              <!-- Every how many hours the asset should be published. Can be between 1 and 23 -->
              <element name="publishIntervalHours" minOccurs="0" maxOccurs="1" type="xsd:nonNegativeInteger"/>
              <!-- Which days of the which the job should publish on - select all days to have a daily publish -->
              <element name="publishDaysOfWeek" minOccurs="0" maxOccurs="1" type="impl:daysOfWeek"/>
              <!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted -->
              <element name="cronExpression" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            </choice>
            <!-- semicolon-delimited list of string user names for which this asset is available for use
               NOT REQUIRED leave out to assign no users -->
            <element name="sendReportToUsers" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="sendReportToGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not to send a report when there are no errors
               NOT REQUIRED default: false -->
            <element name="sendReportOnErrorOnly" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- REQUIRED The recycle bin expiration time -->
            <element name="recycleBinExpiration" minOccurs="1" maxOccurs="1" type="impl:recycleBinExpiration"/>
            <!-- REQUIRED Unpublish assets when they are moved to an expiration folder -->
            <element name="unpublishOnExpiration" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <!-- REQUIRED Generate broken link report on a schedule specified in Global preferences -->
            <element name="linkCheckerEnabled" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <!-- REQUIRED Check external links when publishing assets in this site -->
            <element name="externalLinkCheckOnPublish" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <element name="inheritDataChecksEnabled" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <element name="spellCheckEnabled" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <element name="linkCheckEnabled" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <element name="accessibilityCheckEnabled" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <!-- REQUIRED Determines whether naming rules are inherited from the system preferences.
                  If true, the rule properties will be ignored when saving, but old values are preserved.
                  Otherwise, null values will be defaulted to appropriate values when saving.
                  Naming rules read from a site may be null. -->
            <element name="inheritNamingRules" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <!-- Depending on inheritNamingRules, this is Optional. Defines what case a name can be. -->
            <element name="namingRuleCase" minOccurs="0" maxOccurs="1" nillable="true" type="impl:namingRuleCase"/>
            <!-- Depending on inheritNamingRules, this is Optional. Defines how spaces are handled for names -->
            <element name="namingRuleSpacing" minOccurs="0" maxOccurs="1" nillable="true" type="impl:namingRuleSpacing"/>
            <!-- Depending on inheritNamingRules, this is Optional. Defines the asset types that enforce naming rules -->
            <element name="namingRuleAssets" minOccurs="0" maxOccurs="1" nillable="true" type="impl:namingRuleAssets"/>
            <!-- REQUIRED Generate accessibility report on a schedule specified in Global preferences -->
            <element name="accessibilityCheckerEnabled" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <!-- Enables the Widen Collective DAM integration, which must also be configured within system preferences. NOT REQUIRED -->
            <element name="widenDamIntegrationEnabled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Widen Collective category used to pre-populate the search results. NOT REQUIRED -->
            <element name="widenDamIntegrationCategory" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <!-- Enables the Webdam DAM integration, which must also be configured within system preferences. NOT REQUIRED -->
            <element name="webdamDamIntegrationEnabled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- The root folder id and containers idds - used only when reading a site. Unused in other cases
                 NOT REQUIRED ignored -->
            <element name="rootFolderId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootAssetFactoryContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootPageConfigurationSetContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootContentTypeContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootConnectorContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootDataDefinitionContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootSharedFieldContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootMetadataSetContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootPublishSetContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootSiteDestinationContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootTransportContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
            <element name="rootWorkflowDefinitionContainerId" minOccurs="0" maxOccurs="1" type="xsd:string" nillable="true"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <simpleType name="namingRuleCase">
      <restriction base="xsd:string">
        <enumeration value="ANY"/>
        <enumeration value="LOWER"/>
        <enumeration value="UPPER"/>
      </restriction>
    </simpleType>

    <simpleType name="namingRuleSpacing">
      <restriction base="xsd:string">
        <enumeration value="SPACE"/>
        <enumeration value="REMOVE"/>
        <enumeration value="HYPHEN"/>
        <enumeration value="UNDERSCORE"/>
      </restriction>
    </simpleType>

    <complexType name="namingRuleAssets">
      <sequence>
        <element name="namingRuleAsset" minOccurs="0" maxOccurs="unbounded" type="impl:namingRuleAsset"/>
      </sequence>
    </complexType>

    <simpleType name="namingRuleAsset">
      <restriction base="xsd:string">
        <enumeration value="block"/>
        <enumeration value="file"/>
        <enumeration value="folder"/>
        <enumeration value="page"/>
        <enumeration value="symlink"/>
        <enumeration value="template"/>
        <enumeration value="reference"/>
        <enumeration value="format"/>
      </restriction>
    </simpleType>

    <simpleType name="recycleBinExpiration">
      <restriction base="xsd:string">
        <enumeration value="1"/>
        <enumeration value="15"/>
        <enumeration value="30"/>
        <enumeration value="never"/>
      </restriction>
    </simpleType>

    <!--  for Sites, Targets, Publish Sets scheduledPublishDestinationMode property -->
     <simpleType name="scheduledDestinationMode">
        <restriction base="xsd:string">
            <enumeration value="all-destinations"/>
            <enumeration value="selected-destinations"/>
        </restriction>
      </simpleType>

    <complexType name="role-assignments">
      <sequence>
        <element name="roleAssignment" maxOccurs="unbounded" minOccurs="0" type="impl:role-assignment"/>
      </sequence>
    </complexType>

    <complexType name="role-assignment">
      <sequence>
        <!-- Priority: roleId > roleName
           NOT REQUIRED -->
        <element name="roleId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="roleName" maxOccurs="1" minOccurs="0" type="xsd:string"/>

        <!--  comma delimited list of usernames -->
        <element name="users" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!--  comma delimited list of group names -->
        <element name="groups" minOccurs="0" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <complexType name="assetFactory">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="applicableGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- The type of asset this factory will create
               REQUIRED -->
            <element name="assetType" maxOccurs="1" minOccurs="1" type="xsd:string"/>
            <!-- The default/base asset for this factory: assets created using
               this factory are initially populated with this asset's data.
               NOT REQUIRED default: none -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin.
               Priority: baseAssetId > baseAssetPath
               NOT REQUIRED -->
            <element name="baseAssetId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="baseAssetPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="baseAssetRecycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>

            <!-- The description text for this factory which is displayed in the new menu.
                           NOT REQUIRED default: null -->
            <element name="description" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- where assets created from this factory must be placed if specified
                           NOT REQUIRED default: none -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin.
               Priority: placementFolderId > placementFolderPath
               NOT REQUIRED -->
            <element name="placementFolderId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="placementFolderPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="placementFolderRecycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- when the placement folder is specified, this allows assets to be placed
               in subfolders of that folder as well
               NOT REQUIRED default: false -->
            <element name="allowSubfolderPlacement" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- assets created from this factory will be positioned at this folder position
               NOT REQURIED default: 0 -->
            <element name="folderPlacementPosition" minOccurs="0" maxOccurs="1" type="xsd:nonNegativeInteger"/>
            <!-- If an asset is created from this factory and placed in a folder with an asset
               of the same name, whether or not that asset will be overwritten.
               NOT REQUIRED default: false -->
            <element name="overwrite" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- What workflow behavior to use when creating assets using this asset factory
               REQUIRED -->
            <element name="workflowMode" minOccurs="1" maxOccurs="1" type="impl:asset-factory-workflow-mode"/>
            <!-- When workflowMode is "factory-controlled", this specifies the workflow definition
               to use
               Priority: workflowDefinitionId > workflowDefinitionPath
               NOT REQUIRED default: empty -->
            <element name="workflowDefinitionId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="workflowDefinitionPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- An array of asset factory plugins assigned to the asset factory
               NOT REQUIRED default: empty -->
            <element name="plugins" minOccurs="0" maxOccurs="1" type="impl:asset-factory-plugins"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- complex type wrapping a list of asset factory plugins -->
    <complexType name="asset-factory-plugins">
      <sequence>
        <element name="plugin" minOccurs="0" maxOccurs="unbounded" type="impl:asset-factory-plugin"/>
      </sequence>
    </complexType>

    <complexType name="asset-factory-plugin">
      <sequence>
          <!-- Name of the asset factory plugin - this is the exact class, like "com.cms.assetfactory.DisplayToSystemNamePlugin"
               REQUIRED -->
        <element name="name" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <element name="parameters" minOccurs="0" maxOccurs="1" type="impl:asset-factory-plugin-parameters"/>
      </sequence>
    </complexType>

    <!-- complex type wrapping a list of asset factory plugin parameters -->
    <complexType name="asset-factory-plugin-parameters">
      <sequence>
        <element name="parameter" minOccurs="0" maxOccurs="unbounded" type="impl:asset-factory-plugin-parameter"/>
      </sequence>
    </complexType>

    <complexType name="asset-factory-plugin-parameter">
      <sequence>
        <!-- Parameter name (not label), for example "assetfactory.plugin.filelimit.param.name.size"
           REQUIRED -->
        <element name="name" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- Parameter value
           NOT REQUIRED default: empty string -->
        <element name="value" minOccurs="0" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- For asset factory's workflowMode field -->
    <simpleType name="asset-factory-workflow-mode">
      <restriction base="xsd:string">
        <enumeration value="folder-controlled"/>
        <enumeration value="factory-controlled"/>
        <enumeration value="none"/>
      </restriction>
    </simpleType>

    <complexType name="assetFactoryContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="applicableGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- string describing the asset factory container, displayed in the new menu
               NOT REQUIRED leave out to assign no description -->
            <element name="description" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="contentType">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- Priority: pageConfigurationSetId > pageConfigurationSetPath
               One is REQUIRED -->
            <element name="pageConfigurationSetId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="pageConfigurationSetPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- Priority: metadataSetId > metadataSetPath
               One is REQUIRED -->
            <element name="metadataSetId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="metadataSetPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- Priority: dataDefinitionId > dataDefinitionPath
               NOT REQUIRED -->
            <element name="dataDefinitionId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="dataDefinitionPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- Priority: editorConfigurationId > editorConfigurationPath
               NOT REQUIRED -->
            <element name="editorConfigurationId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="editorConfigurationPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- Priority: publishSetId > publishSetPath
              NOT REQUIRED -->
            <element name="publishSetId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="publishSetPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- The array of contentTypePageConfigurations
               NOT REQUIRED - if not specified, the default publish mode "all-destinations" is used for each pageConfiguration
                            - ignored in Global area -->
            <element name="contentTypePageConfigurations" maxOccurs="1" minOccurs="0" nillable="true" type="impl:contentTypePageConfigurations"/>

            <!-- The array of inlineEditableFields
                 NOT REQUIRED - if not specified, none of the regions or fields will be inline editable -->
            <element name="inlineEditableFields" maxOccurs="1" minOccurs="0" nillable="true" type="impl:inlineEditableFields"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="contentTypePageConfigurations">
      <sequence>
        <element name="contentTypePageConfiguration" maxOccurs="unbounded" minOccurs="0" nillable="true" type="impl:contentTypePageConfiguration"/>
      </sequence>
    </complexType>

    <complexType name="contentTypePageConfiguration">
      <sequence>
        <!-- The page configuration
           Priority: pageConfigurationId > pageConfigurationName
           One is REQUIRED -->
        <element name="pageConfigurationId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <element name="pageConfigurationName" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- REQUIRED -->
        <element name="publishMode" minOccurs="1" maxOccurs="1" type="impl:contentTypePageConfigurationPublishMode"/>

        <!-- REQUIRED if "publishMode" is "selected-destinations", else NOT REQUIRED and ignored -->
        <element name="destinations" maxOccurs="1" minOccurs="0" nillable="true" type="impl:destination-list"/>
      </sequence>
    </complexType>

    <simpleType name="contentTypePageConfigurationPublishMode">
      <restriction base="xsd:string">
        <enumeration value="all-destinations"/>
        <enumeration value="selected-destinations"/>
        <enumeration value="do-not-publish"/>
      </restriction>
    </simpleType>

    <complexType name="destination-list">
      <sequence>
        <element name="destination" minOccurs="0" maxOccurs="unbounded" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="inlineEditableFields">
      <sequence>
        <element name="inlineEditableField" maxOccurs="unbounded" minOccurs="0" nillable="true" type="impl:inlineEditableField"/>
      </sequence>
    </complexType>

    <complexType name="inlineEditableField">
      <sequence>
        <!-- REQUIRED -->
        <element name="pageConfigurationName" minOccurs="1" maxOccurs="1" type="xsd:string"/>

        <!-- REQUIRED -->
        <element name="pageRegionName" minOccurs="1" maxOccurs="1" type="xsd:string"/>

        <!-- NOT REQUIRED
             This property is only applicable for data-definition type fields and is need only if the field is inside of a group.
             It holds a list of ancestor data definition groups presented in a form of path. For example, if this field is in
             a group "cities" and that group is in another group "countries", then this property would have value "countries/cities" -->
        <element name="dataDefinitionGroupPath" minOccurs="0" maxOccurs="1" nillable="true" type="xsd:string"/>

        <!-- REQUIRED -->
        <element name="type" minOccurs="1" maxOccurs="1" type="impl:inlineEditableFieldType"/>

        <!-- REQUIRED for metadata and data-definition field type
           NOT REQUIRED for xhtml field type
             Use title, displayName, summary, teaser, keywords, description, author, startDate, endDate, reviewDate for wired metadata fields,
             field name for dynamic metadata field or field identifier for a data definition field. -->
        <element name="name" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
      </sequence>
    </complexType>

    <simpleType name="inlineEditableFieldType">
      <restriction base="xsd:string">
        <enumeration value="wired-metadata"/>
        <enumeration value="dynamic-metadata"/>
        <enumeration value="data-definition"/>
        <enumeration value="xhtml"/>
      </restriction>
    </simpleType>

    <complexType name="contentTypeContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="pageConfigurationSet">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- The individual page configurations contained within this set -->
            <element name="pageConfigurations" maxOccurs="1" minOccurs="1" type="impl:page-configurations"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- complex type wrapping a list of page configurations -->
    <complexType name="page-configurations">
      <sequence>
        <element name="pageConfiguration" minOccurs="1" maxOccurs="unbounded" type="impl:pageConfiguration"/>
      </sequence>
    </complexType>

    <!-- A single page configuration -->
    <complexType name="pageConfiguration">
      <complexContent>
        <extension base="impl:base-asset">
          <sequence>
            <!-- A single page configuration's name, such as "XML" or "Full HTML"
               REQUIRED -->
            <element name="name" maxOccurs="1" minOccurs="1" type="xsd:string"/>
            <!-- Whether or not this is the default configuration
               REQUIRED -->
            <element name="defaultConfiguration" maxOccurs="1" minOccurs="1" type="xsd:boolean"/>

            <!-- The template for this configuration
               Priority: templateId > templatePath
               One is REQUIRED for pageConfigurationSet
               NOT REQUIRED for page -->
            <element name="templateId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="templatePath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- The overall xslt format applied to this page configuration
               Priority: formatId > formatPath
               NOT REQUIRED default none -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin. -->
            <element name="formatId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="formatPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="formatRecycled" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The individual page region assignments for this configuration -->
            <element name="pageRegions" minOccurs="0" maxOccurs="1" type="impl:page-regions"/>

            <!-- The output file extension, for example ".html"
               Only required when in a site -->
            <element name="outputExtension" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <!-- The content type this target serializes its output as
               Only required when in a site -->
            <element name="serializationType" maxOccurs="1" minOccurs="0" nillable="true" type="impl:serialization-type"/>
            <!-- When the serializationType is "XML", should Cascade include the XML
               declaration in published files?
               NOT REQUIRED default: false -->
            <element name="includeXMLDeclaration" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:boolean"/>
            <!-- Is this configuration publishable? -->
            <element name="publishable" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:boolean"/>

          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- complex type wrapping a list of page regions -->
    <complexType name="page-regions">
      <sequence>
        <element name="pageRegion" minOccurs="0" maxOccurs="unbounded" type="impl:pageRegion"/>
      </sequence>
    </complexType>

    <!-- An individual page region -->
    <complexType name="pageRegion">
      <complexContent>
        <extension base="impl:base-asset">
          <sequence>
            <!-- The name of this page region, for example, "DEFAULT", or "JAVASCRIPT-INCLUDE"
               This MUST correspond to the name of a region defined in the template.
               REQUIRED -->
            <element name="name" maxOccurs="1" minOccurs="1" type="xsd:string"/>

            <!-- The block assigned at this page region
               Priority: blockId > blockPath
               NOT REQUIRED -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin. -->
            <element name="blockId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="blockPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="blockRecycled" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>

            <!-- When this is set to true, this will keep a block defined at a lower
               level from applying to this region
               NOT REQUIRED default: false -->
            <element name="noBlock" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>

            <!-- The format assigned at this page region, can be either xslt or script
               Priority: formatId > formatPath
               NOT REQUIRED -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin. -->
            <element name="formatId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="formatPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="formatRecycled" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>

            <!-- When this is set to true, this will keep a format defined at a lower
               level from applying to this region
               NOT REQUIRED default: false -->
            <element name="noFormat" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="pageConfigurationSetContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="dataDefinition">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- The XML content of this data definition
               REQUIRED -->
            <element name="xml" maxOccurs="1" minOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="dataDefinitionContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="sharedField">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- The XML content of this shared field
               REQUIRED -->
            <element name="xml" maxOccurs="1" minOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="sharedFieldContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="metadataSet">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- Whether or not the author field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="authorFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the author field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="authorFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the author field
              NOT REQUIRED  -->
            <element name="authorFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the description field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="descriptionFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the description field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="descriptionFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the description field
               NOT REQUIRED  -->
            <element name="descriptionFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the display name field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="displayNameFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the display name field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="displayNameFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the display name field
              NOT REQUIRED  -->
            <element name="displayNameFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the end date field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="endDateFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the end date field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="endDateFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the end date field
               NOT REQUIRED  -->
            <element name="endDateFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the expiration folder field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="expirationFolderFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the expiration folder field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="expirationFolderFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the expiration folder field
              NOT REQUIRED  -->
            <element name="expirationFolderFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the keywords field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="keywordsFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the keywords field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="keywordsFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the keywords field
               NOT REQUIRED  -->
            <element name="keywordsFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the review date field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="reviewDateFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the review date field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="reviewDateFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the review date field
               NOT REQUIRED  -->
            <element name="reviewDateFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the start date field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="startDateFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the start date field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="startDateFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- The help text for the start date field
              NOT REQUIRED  -->
            <element name="startDateFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the summary field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="summaryFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the summary field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="summaryFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- the help text for the summary field
              NOT REQUIRED -->
            <element name="summaryFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the teaser field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="teaserFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the teaser field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="teaserFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- the help text for the teaser field
               NOT REQUIRED -->
            <element name="teaserFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not the title field is required on assets using this metadata set
               NOT REQUIRED default false -->
            <element name="titleFieldRequired" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The visibility of the title field for assets using this metadata set
               NOT REQUIRED default "visible" -->
            <element name="titleFieldVisibility" maxOccurs="1" minOccurs="0" type="impl:metadata-field-visibility"/>
            <!-- the help text for the title field
               NOT REQUIRED -->
            <element name="titleFieldHelpText" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- The dynamic metadata field definitions -->
            <element name="dynamicMetadataFieldDefinitions" maxOccurs="1" minOccurs="0" type="impl:dynamic-metadata-field-definitions"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- wrapper complex type for a list of dynamic metadata field definitions -->
    <complexType name="dynamic-metadata-field-definitions">
      <sequence>
        <element name="dynamicMetadataFieldDefinition" minOccurs="0" maxOccurs="unbounded" type="impl:dynamicMetadataFieldDefinition"/>
      </sequence>
    </complexType>

    <!-- A single dynamic metadata field definition -->
    <complexType name="dynamicMetadataFieldDefinition">
      <sequence>
        <!-- The name of the dynamic metadata field
           REQUIRED -->
        <element name="name" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The label of the dynamic metadata field
           REQUIRED -->
        <element name="label" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The type of the dynamic metadata field
           REQUIRED -->
        <element name="fieldType" minOccurs="1" maxOccurs="1" type="impl:dynamic-metadata-field-type"/>
        <!-- Whether or not this field is required
           NOT REQUIRED default false -->
        <element name="required" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
        <!-- The visibility of this field
           NOT REQUIRED default visible -->
        <element name="visibility" minOccurs="0" maxOccurs="1" type="impl:metadata-field-visibility"/>
        <!-- REQUIRED for radio, checkbox, dropdown and multiselect types
           NOT REQUIRED and ignored for text type -->
        <element name="possibleValues" minOccurs="0" maxOccurs="1" type="impl:dynamic-metadata-field-definition-values"/>
        <!-- the help text for this field
  NOT REQUIRED -->
        <element name="helpText" minOccurs="0" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <complexType name="dynamic-metadata-field-definition-values">
      <sequence>
        <element name="possibleValue" minOccurs="0" maxOccurs="unbounded" nillable="true" type="impl:dynamic-metadata-field-definition-value"/>
      </sequence>
    </complexType>

    <!-- Represents a possible value for a dynamic metadata field -->
    <complexType name="dynamic-metadata-field-definition-value">
      <sequence>
        <!-- The actual string value
             NOT REQUIRED - when not provided, an empty string will be used as a value -->
        <element name="value" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- Label that is displayed to the user editing an asset
             NOT REQUIRED - when not provided, value will be displayed to the user -->
        <element name="label" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- Whether or not this value should be checked by default when creating new assets through web UI
           NOT REQUIRED - false by default -->
        <element name="selectedByDefault" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <!-- Enumeration of the possible metadata field visibilities -->
    <simpleType name="metadata-field-visibility">
      <restriction base="xsd:string">
        <enumeration value="inline"/>
        <enumeration value="hidden"/>
        <enumeration value="visible"/>
      </restriction>
    </simpleType>

    <!-- The different types of dynamic metadata fields -->
    <simpleType name="dynamic-metadata-field-type">
      <restriction base="xsd:string">
        <enumeration value="text"/>
        <enumeration value="datetime"/>
        <enumeration value="radio"/>
        <enumeration value="dropdown"/>
        <enumeration value="checkbox"/>
        <enumeration value="multiselect"/>
      </restriction>
    </simpleType>

    <complexType name="metadataSetContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="publishSet">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- A list of files that is included in this publish set
               NOT REQUIRED default: empty -->
            <element name="files" maxOccurs="1" minOccurs="0" type="impl:publishable-asset-list"/>
            <!-- A list of folders that is included in this publish set
               NOT REQUIRED default: empty -->
            <element name="folders" maxOccurs="1" minOccurs="0" type="impl:publishable-asset-list"/>
            <!-- A list of pages that is included in this publish set
               NOT REQUIRED default: empty -->
            <element name="pages" maxOccurs="1" minOccurs="0" type="impl:publishable-asset-list"/>
            <!-- Whether or not to publish this set on a schedule
               NOT REQUIRED default: false -->
            <element name="usesScheduledPublishing" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Scheduled publish destination selection mode, see "scheduledPublishDestinationMode" simpleType for acceptable values
              NOT REQUIRED
            -->
            <element name="scheduledPublishDestinationMode" minOccurs="0" maxOccurs="1" type="impl:scheduledDestinationMode" nillable="true"/>
            <!-- Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly
              NOT REQUIRED
            -->
            <element name="scheduledPublishDestinations" minOccurs="0" maxOccurs="1" type="impl:destination-list"/>
            <!-- The base time this set will be published. For example if one wanted
               this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
               one of those times here and set the "publishInterval" to 4, and the
               "publishIntervalUnits" to "hours"
               NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored -->
            <element name="timeToPublish" minOccurs="0" maxOccurs="1" type="xsd:time"/>
            <!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
               going to be used.
               One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored-->
            <choice>
              <!-- Every how many hours the asset should be published. Can be between 1 and 23 -->
              <element name="publishIntervalHours" minOccurs="0" maxOccurs="1" type="xsd:nonNegativeInteger"/>
              <!-- Which days of the which the job should publish on - select all days to have a daily publish -->
              <element name="publishDaysOfWeek" minOccurs="0" maxOccurs="1" type="impl:daysOfWeek"/>
              <!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted -->
              <element name="cronExpression" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            </choice>
            <!-- semicolon-delimited list of string user names for which this asset is available for use
               NOT REQUIRED leave out to assign no users -->
            <element name="sendReportToUsers" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="sendReportToGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not to send a report when there are no errors
               NOT REQUIRED default: false -->
            <element name="sendReportOnErrorOnly" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- A wrapper type wrapping a list of identifiers of publishable assets (files, folders, or pages) -->
    <complexType name="publishable-asset-list">
      <sequence>
        <element name="publishableAssetIdentifier" minOccurs="0" maxOccurs="unbounded" type="impl:identifier"/>
      </sequence>
    </complexType>

    <!-- A wrapper type wrapping a list of identifiers of publishable assets (files, folders, or pages) -->
    <complexType name="daysOfWeek">
      <sequence>
        <element name="dayOfWeek" minOccurs="0" maxOccurs="unbounded" type="impl:dayOfWeek"/>
      </sequence>
    </complexType>

    <simpleType name="dayOfWeek">
      <restriction base="xsd:string">
        <enumeration value="Monday"/>
        <enumeration value="Tuesday"/>
        <enumeration value="Wednesday"/>
        <enumeration value="Thursday"/>
        <enumeration value="Friday"/>
        <enumeration value="Saturday"/>
        <enumeration value="Sunday"/>
      </restriction>
    </simpleType>

    <complexType name="publishSetContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="siteDestinationContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="target">
      <complexContent>
        <extension base="impl:named-asset">
          <sequence>
            <!-- For defining the parent target relationship
               Priority: parentTargetId > parentTargetPath
               One is REQUIRED -->
            <element name="parentTargetId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="parentTargetPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- The path of this target. When creating this need not be specified.
               When editing this will be the CURRENT path of the target. -->
            <element name="path" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- For defining the base folder relationship
               Priority: baseFolderId > baseFolderPath
               One is REQUIRED -->
            <element name="baseFolderId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="baseFolderPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- The output file extension, for example ".html"
               REQUIRED -->
            <element name="outputExtension" maxOccurs="1" minOccurs="1" type="xsd:string"/>
            <!-- The CSS classes that pages using this target will have available to them
               in the WYSIWYG editor (comma-delimted list)
               NOT REQUIRED default: empty -->
            <element name="cssClasses" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- The file that defines the CSS classes in the cssClasses field
               NOT REQUIRED default: none -->

            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin.
               Priority: cssFileId > cssFilePath
               NOT REQUIRED -->
            <element name="cssFileId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="cssFilePath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="cssFileRecycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- The content type this target serializes its output as
               REQUIRED -->
            <element name="serializationType" maxOccurs="1" minOccurs="1" type="impl:serialization-type"/>
            <!-- When the serializationType is "XML", should Cascade include the XML
               declaration in published files?
               NOT REQUIRED default: false -->
            <element name="includeXMLDeclaration" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- When publishing, whether or not to include the target path as part
               of the path of the published file
               NOT REQUIRED default: false -->
            <element name="includeTargetPath" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- When publishing, whether or not to remove the base folder's path from
               the path of the published file
               NOT REQUIRED default: false -->
            <element name="removeBaseFolder" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not to publish this set on a schedule
               NOT REQUIRED default: false -->
            <element name="usesScheduledPublishing" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Scheduled publish destination selection mode, see "scheduledPublishDestinationMode" simpleType for acceptable values
              NOT REQUIRED
            -->
            <element name="scheduledPublishDestinationMode" minOccurs="0" maxOccurs="1" type="impl:scheduledDestinationMode" nillable="true"/>
            <!-- Used in conjunction with scheduledPublishDestinationMode when destinations are to be specified explicitly
              NOT REQUIRED
            -->
            <element name="scheduledPublishDestinations" minOccurs="0" maxOccurs="1" type="impl:destination-list"/>
            <!-- The base time this set will be published. For example if one wanted
               this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
               one of those times here and set the "publishInterval" to 4, and the
               "publishIntervalUnits" to "hours"
               NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored -->
            <element name="timeToPublish" minOccurs="0" maxOccurs="1" type="xsd:time"/>
            <!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
               going to be used.
               One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored-->
            <choice>
              <!-- Every how many hours the asset should be published. Can be between 1 and 23 -->
              <element name="publishIntervalHours" minOccurs="0" maxOccurs="1" type="xsd:nonNegativeInteger"/>
              <!-- Which days of the which the job should publish on - select all days to have a daily publish -->
              <element name="publishDaysOfWeek" minOccurs="0" maxOccurs="1" type="impl:daysOfWeek"/>
              <!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted -->
              <element name="cronExpression" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            </choice>
            <!-- semicolon-delimited list of string user names for which this asset is available for use
               NOT REQUIRED leave out to assign no users -->
            <element name="sendReportToUsers" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="sendReportToGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not to send a report when there are no errors
               NOT REQUIRED default: false -->
            <element name="sendReportOnErrorOnly" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- The various serialization types for a target -->
    <simpleType name="serialization-type">
      <restriction base="xsd:string">
        <enumeration value="HTML"/>
        <enumeration value="XML"/>
        <enumeration value="PDF"/>
        <enumeration value="RTF"/>
        <enumeration value="JSON"/>
        <enumeration value="JS"/>
        <enumeration value="CSS"/>
      </restriction>
    </simpleType>

    <complexType name="destination">
      <complexContent>
        <extension base="impl:named-asset">
          <sequence>
            <!-- For defining the parent target relationship
               Priority: parentContainerId > parentContainerPath
               One is REQUIRED
               When inside a Site, this field must refer to a SiteDestinationContainer.
               When not in a Site, this field must refer to a Target
                -->
            <element name="parentContainerId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="parentContainerPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- For defining the transport relationship
               Priority: transportId > transportPath
               One is REQUIRED -->
            <element name="transportId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="transportPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="applicableGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- The directory to place the published files in
               NOT REQUIRED default: empty -->
            <element name="directory" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not this destination is enabled for publishing
               NOT REQUIRED default: false -->
            <element name="enabled" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not this destination is checked by default when publish screen is loaded
               NOT REQUIRED default: false -->
            <element name="checkedByDefault" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- When publishing, whether or not to only publish ASCII characters.
               Unicode characters will be escaped
               NOT REQUIRED default: false -->
            <element name="publishASCII" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not to publish this set on a schedule
               NOT REQUIRED default: false -->
            <element name="usesScheduledPublishing" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Not used, will be ignored if any value is set -->
            <element name="scheduledPublishDestinationMode" minOccurs="0" maxOccurs="1" type="impl:scheduledDestinationMode" nillable="true"/>
            <!-- Not used, will be ignored if any value is set -->
            <element name="scheduledPublishDestinations" minOccurs="0" maxOccurs="1" type="impl:destination-list"/>
            <!-- The base time this set will be published. For example if one wanted
               this set to publish at 0100, 0500, 0900, 1300, 1700, 2100, I would enter
               one of those times here and set the "publishInterval" to 4, and the
               "publishIntervalUnits" to "hours"
               NOT REQUIRED default: 00:00 (midnight), if cronExpression provided or usesScheduledPublishing is false, ignored -->
            <element name="timeToPublish" minOccurs="0" maxOccurs="1" type="xsd:time"/>
            <!-- Depending on which of the following 3 values is provided, that is the type of scheduled publish that is
               going to be used.
               One is REQUIRED if usesScheduledPublishing is true, else NOT REQUIRED and ignored-->
            <choice>
              <!-- Every how many hours the asset should be published. Can be between 1 and 23 -->
              <element name="publishIntervalHours" minOccurs="0" maxOccurs="1" type="xsd:nonNegativeInteger"/>
              <!-- Which days of the which the job should publish on - select all days to have a daily publish -->
              <element name="publishDaysOfWeek" minOccurs="0" maxOccurs="1" type="impl:daysOfWeek"/>
              <!-- Applicable only if publishInterval Units is "cron" - only a valid Cron Expression will be accepted -->
              <element name="cronExpression" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            </choice>
            <!-- semicolon-delimited list of string user names for which this asset is available for use
               NOT REQUIRED leave out to assign no users -->
            <element name="sendReportToUsers" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="sendReportToGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not to send a report when there are no errors
               NOT REQUIRED default: false -->
            <element name="sendReportOnErrorOnly" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>

            <!-- The base URL which should be used for linking to a given configuration during publishing, when this destination
               is explicity chosen for a configuration on the content type. -->
            <element name="webUrl" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true" />

            <!-- A comma separated list of extensions that should be stripped from links pointing to assets published to this destination.
               NOT REQUIRED default: empty -->
            <element name="extensionsToStrip" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true" />

            <!-- The site
               Priority: siteId > siteName
               One is REQUIRED -->
            <element name="siteId" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true"/>
            <element name="siteName" maxOccurs="1" minOccurs="0" type="xsd:string" nillable="true"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="fileSystemTransport">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- The directory to output the files to, for example "c:\inetfiles\wwwroot"
               REQUIRED -->
            <element name="directory" maxOccurs="1" minOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="ftpTransport">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- The host name or IP address of the remote server
               REQUIRED -->
            <element name="hostName" maxOccurs="1" minOccurs="1" type="xsd:string"/>
            <!-- The port to use to connect to the server
               REQUIRED -->
            <element name="port" maxOccurs="1" minOccurs="1" type="xsd:positiveInteger"/>
            <!-- Wehther or not to connect using PASV mode FTP
               NOT REQUIRED default: false -->
            <element name="doPASV" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The username to use when connecting to the server. Usually: 22 for SFTP, 21 for FTP, and 990 for FTPS
               REQUIRED -->
            <element name="username" maxOccurs="1" minOccurs="1" type="xsd:string"/>
            <!-- The authentication mode to use when connecting to the server. Applicable only when ftpProtocolType is SFTP.
                REQUIRED when ftpProtocolType is SFTP -->
            <element name="authMode" maxOccurs="1" minOccurs="0" type="impl:authMode"/>
            <!-- The key to use when connecting to the server. Applicable only when ftpProtocolType is SFTP and authMode is "PUBLIC_KEY"
               NOT REQUIRED default: empty -->
            <element name="privateKey" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- The password to use when connecting to the server. This is treated as a regular password when ftpProtocolType is FTP or FTPS or SFTP (with authMode 'PASSWORD') or an optional Private Key passphrase when ftpProtocolType SFTP and authMode is "PUBLIC_KEY"
               REQUIRED when ftpProtocolType is FTP or FTPS or when ftpProtocolType is SFTP and authMode is "PASSWORD" -->
            <element name="password" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- The directory to place the files in
               NOT REQUIRED default: empty -->
            <element name="directory" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!--Whether or not to connect using regular FTP, FTP over SSL/TLS, or SFTP  using secure FTP (SSH protocol)
               NOTE: Valid values can be either FTP, FTPS, or SFTP
               REQUIRED default : ftp-->
            <element name="ftpProtocolType" maxOccurs="1" minOccurs="1" type="impl:ftpProtocolType"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <simpleType name="authMode">
      <restriction base="xsd:string">
        <enumeration value="PASSWORD"/>
        <enumeration value="PUBLIC_KEY"/>
      </restriction>
    </simpleType>

    <simpleType name="ftpProtocolType">
      <restriction base="xsd:string">
        <enumeration value="FTP"/>
        <enumeration value="FTPS"/>
        <enumeration value="SFTP"/>
      </restriction>
    </simpleType>

    <complexType name="databaseTransport">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- The site id
               REQUIRED -->
            <element name="transportSiteId" maxOccurs="1" minOccurs="1" type="xsd:nonNegativeInteger"/>

            <!-- The name of the database server
               REQUIRED -->
            <element name="serverName" maxOccurs="1" minOccurs="1" type="xsd:string"/>

            <!-- The port on which of the database server is working
               REQUIRED -->
            <element name="serverPort" maxOccurs="1" minOccurs="1" type="xsd:positiveInteger"/>

            <!-- The name of the database itself
               REQUIRED -->
            <element name="databaseName" maxOccurs="1" minOccurs="1" type="xsd:string"/>

            <!-- The username fto user when connecting to the server
               REQUIRED -->
            <element name="username" maxOccurs="1" minOccurs="1" type="xsd:string"/>

            <!-- The password to use when connecting to the server
               NOT REQUIRED default: empty string -->
            <element name="password" maxOccurs="1" minOccurs="0" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="cloudTransport">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- The S3 key
              REQUIRED -->
            <element name="key" maxOccurs="1" minOccurs="1" type="xsd:string"/>

            <!-- The S3 secret
              REQUIRED -->
            <element name="secret" maxOccurs="1" minOccurs="1" type="xsd:string"/>

            <!-- The name of the S3 bucket
              REQUIRED -->
            <element name="bucketName" maxOccurs="1" minOccurs="1" type="xsd:string"/>

            <!-- The directory to place the files in
              NOT REQUIRED default: empty -->
            <element name="basePath" maxOccurs="1" minOccurs="0" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="transportContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="connectorContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="connector">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- First authentication token for the external application the connector connects to (usually a username or email address)
               NOT REQUIRED -->
            <element name="auth1" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <!-- Second authentication token for the external application the connector connects to (usually a password)
               Write only - hidden when read
               NOT REQUIRED -->
            <element name="auth2" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <!-- URL of the external application the connector connects to
               NOT REQUIRED -->
            <element name="url" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <!-- Determins whether or not the connector has been verified
               Read only - editing a connector always unverifies it
               NOT REQUIRED -->
            <element name="verified" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The date this conenctor was verified
                 Read only - editing a connector always clears the verification date
               NOT REQUIRED -->
            <element name="verifiedDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>
            <!-- A list of connector parameters
               NOT REQUIRED -->
            <element name="connectorParameters" maxOccurs="1" minOccurs="0" type="impl:connector-parameter-list"/>
            <!-- A list of connector parameters
               REQUIRED for TwitterConnector, FacebookConnector and WordPressConnector -->
            <element name="connectorContentTypeLinks" maxOccurs="1" minOccurs="0" type="impl:connector-content-type-link-list"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="statusUpdateConnector" >
      <complexContent>
        <extension base="impl:connector">
          <sequence>
            <!-- The destination
               Priority: destinationId > destinationPath
               One is REQUIRED -->
            <element name="destinationId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="destinationPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="wordPressConnector">
      <complexContent>
        <extension base="impl:connector" />
      </complexContent>
    </complexType>

    <complexType name="twitterConnector">
      <complexContent>
        <extension base="impl:statusUpdateConnector" />
      </complexContent>
    </complexType>

    <complexType name="facebookConnector">
      <complexContent>
        <extension base="impl:statusUpdateConnector" />
      </complexContent>
    </complexType>

    <complexType name="googleAnalyticsConnector">
      <complexContent>
        <extension base="impl:connector" />
      </complexContent>
    </complexType>

    <complexType name="connector-parameter-list">
      <sequence>
        <element name="connectorParameter" maxOccurs="unbounded" minOccurs="0" nillable="true" type="impl:connector-parameter"/>
      </sequence>
    </complexType>

    <complexType name="connector-parameter">
      <sequence>
        <!-- Name of the parameter
           REQUIRED -->
        <element name="name" maxOccurs="1" minOccurs="1" nillable="true" type="xsd:string"/>
        <!-- Value of the parameter
           REQUIRED -->
        <element name="value" maxOccurs="1" minOccurs="1" nillable="true" type="xsd:string"/>
      </sequence>
    </complexType>

    <complexType name="connector-content-type-link-list">
      <sequence>
        <element name="connectorContentTypeLink" maxOccurs="unbounded" minOccurs="0" nillable="true" type="impl:connector-content-type-link"/>
      </sequence>
    </complexType>

    <complexType name="connector-content-type-link">
      <sequence>
        <!-- The content type
           Priority: contentTypeId > contentTypePath
           One is REQUIRED -->
        <element name="contentTypeId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <element name="contentTypePath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- The page configuration
           Priority: pageConfigurationId > pageConfigurationName
           NOT REQUIRED -->
        <element name="pageConfigurationId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <element name="pageConfigurationName" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- A list of connector content type link params
           NOT REQUIRED -->
        <element name="connectorContentTypeLinkParams" maxOccurs="1" minOccurs="0" type="impl:connector-content-type-link-param-list"/>
      </sequence>
    </complexType>

    <complexType name="connector-content-type-link-param-list">
      <sequence>
        <element name="connectorContentTypeLinkParam" maxOccurs="unbounded" minOccurs="0" nillable="true" type="impl:connector-content-type-link-param"/>
      </sequence>
    </complexType>

    <complexType name="connector-content-type-link-param">
      <sequence>
        <!-- Name of the parameter
           REQUIRED -->
        <element name="name" maxOccurs="1" minOccurs="1" nillable="true" type="xsd:string"/>
        <!-- Value of the parameter
           REQUIRED -->
        <element name="value" maxOccurs="1" minOccurs="1" nillable="true" type="xsd:string"/>
      </sequence>
    </complexType>

    <complexType name="workflowDefinition">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- semicolon-delimited list of string group names for which this asset is available for use
               NOT REQUIRED leave out to assign no groups -->
            <element name="applicableGroups" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Whether or not this is a copy type workflow
               NOT REQUIRED default: false -->
            <element name="copy" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not this is a create type workflow
               NOT REQUIRED default: false -->
            <element name="create" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not this is a delete type workflow
               NOT REQUIRED default: false -->
            <element name="delete" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not this is an edit type workflow
               NOT REQUIRED default: false -->
            <element name="edit" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not this is a move type workflow
               NOT REQUIRED default: false -->
            <element name="move" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The naming behavior when an instance of this workflow is created
               REQUIRED -->
            <element name="namingBehavior" maxOccurs="1" minOccurs="1" type="impl:workflowNamingBehavior"/>
            <!-- The actual workflow definition XML
               REQUIRED -->
            <element name="xml" maxOccurs="1" minOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- The different options for naming an instance of a workflow definition -->
    <simpleType name="workflowNamingBehavior">
      <restriction base="xsd:string">
        <enumeration value="auto-name"/>
        <enumeration value="name-of-definition"/>
        <enumeration value="empty"/>
      </restriction>
    </simpleType>

    <complexType name="workflowDefinitionContainer">
      <complexContent>
        <extension base="impl:containered-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- End types that extend containered-asset -->

    <complexType name="dublin-aware-asset">
      <complexContent>
        <extension base="impl:folder-contained-asset">
          <sequence>
            <!-- The individual wired metadata fields
               NOT REQUIRED default: all empty -->
            <element name="metadata" type="impl:metadata" minOccurs="0" maxOccurs="1"/>

            <!-- For defining the metadata set relationship
               Priority: metadataSetId > metadataSetPath
               NOT REQUIRED -->
            <element name="metadataSetId" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <element name="metadataSetPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <element name="reviewOnSchedule" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:boolean"/>
            <element name="reviewEvery" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:nonNegativeInteger"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- The content of the wired metadata fields
       None of the fields are required and the defaults are empty -->
    <complexType name="metadata">
      <sequence>
        <element name="author" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="displayName" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="endDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>
        <element name="keywords" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="metaDescription" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="reviewDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>
        <element name="startDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>
        <element name="summary" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="teaser" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="title" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="dynamicFields" maxOccurs="1" minOccurs="0" type="impl:dynamicMetadataFields"/>
      </sequence>
    </complexType>

    <complexType name="dynamicMetadataFields">
      <sequence>
        <element name="dynamicField" maxOccurs="unbounded" minOccurs="0" type="impl:dynamicMetadataField"/>
      </sequence>
    </complexType>

    <complexType name="dynamicMetadataField">
      <sequence>
        <element name="name" maxOccurs="1" minOccurs="1" nillable="false" type="xsd:string"/>
        <element name="fieldValues" maxOccurs="1" minOccurs="0" nillable="true" type="impl:fieldValues"/>
      </sequence>
    </complexType>

    <complexType name="fieldValues">
      <sequence>
        <element name="fieldValue" maxOccurs="unbounded" minOccurs="0" nillable="true" type="impl:fieldValue"/>
      </sequence>
    </complexType>

    <complexType name="fieldValue">
      <sequence>
        <element name="value" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- An asset that can expire and be moved to an expiration folder -->
    <complexType name="expiring-asset">
      <complexContent>
        <extension base="impl:dublin-aware-asset">
          <!-- For defining the expiration folder relationship
             NOT REQUIRED default: none -->
          <sequence>
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin.
               Priority: expirationFolderId > expirationFolderPath
               NOT REQUIRED -->
            <element name="expirationFolderId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="expirationFolderPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="expirationFolderRecycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Preference object for editing -->
    <complexType name="preference">
      <sequence>
        <element name="name" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <element name="value" minOccurs="1" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>

    <!-- The following concrete types extend expiring-asset -->

    <!-- A symlink is not a UNIX symlink - it is simply an asset containing a hyperlink -->
    <complexType name="symlink">
      <complexContent>
        <extension base="impl:expiring-asset">
          <sequence>
            <!-- the fully qualified URL of this link -->
            <element name="linkURL" minOccurs="0" maxOccurs="1" type="xsd:anyURI"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- Block is an abstract type which the five concrete block types build on -->

    <complexType name="block">
      <complexContent>
        <extension base="impl:expiring-asset">
          <sequence/>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="indexBlock">
      <complexContent>
        <extension base="impl:block">
          <sequence>
              <!-- The type of the index block. It takes "folder" as a default
                   NOT REQUIRED default: "folder" -->
              <element name="indexBlockType" minOccurs="0" maxOccurs="1" type="impl:index-block-type"/>

            <!-- The indexed folder relationship when indexBlockType is folder
               Priority: indexedFolderId > indexedFolderPath)
               NOT REQUIRED -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
               in case if the selected asset gets restored from the recycle bin. -->
            <element name="indexedFolderId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="indexedFolderPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- The indexed content type relationship when indexBlockType is content-type
               Priority: indexedContentTypeId > indexedContentTypePath
               One is REQUIRED when indexBlockType is content-type -->
            <element name="indexedContentTypeId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="indexedContentTypePath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="indexedFolderRecycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- The maximum number of assets to render in XML form for this index block
               REQUIRED -->
            <element name="maxRenderedAssets" minOccurs="1" maxOccurs="1" type="xsd:nonNegativeInteger"/>
            <!-- The folder depth to which the indexer will render assets in XML form
               REQUIRED -->
            <element name="depthOfIndex" minOccurs="1" maxOccurs="1" type="xsd:nonNegativeInteger"/>
            <!-- The rendering behavior of the folder index block
                 NOT REQUIRED default: "render-normally" -->
            <element name="renderingBehavior" minOccurs="0" maxOccurs="1" type="impl:index-block-rendering-behavior"/>
            <!-- Whether or not to index page assets
               NOT REQUIRED default: false -->
            <element name="indexPages" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to index block assets
               NOT REQUIRED default: false -->
            <element name="indexBlocks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to index (sym)link assets
               NOT REQUIRED default: false -->
            <element name="indexLinks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to index file assets
               NOT REQUIRED default: false -->
            <element name="indexFiles" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to include path data
               NOT REQUIRED default: false -->
            <element name="indexRegularContent" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to include last modified date, last modified by, created date and created by
               NOT REQUIRED default: false -->
            <element name="indexSystemMetadata" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to include wired/dynamic metadata
               NOT REQUIRED default: false -->
            <element name="indexUserMetadata" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to include access rights information
               NOT REQUIRED default: false -->
            <element name="indexAccessRights" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- Whether or not to include tags
               NOT REQUIRED default: false -->
            <element name="indexTags" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- When this is "true", an element "user-information" will be added towards the
               bottom of the rendered XML including information about the user's login, full
               name and group memberships
               NOT REQUIRED default: false -->
            <element name="indexUserInfo" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- When this is "true", and this block is included in a page that is in workflow,
               an element containing the page's workflow information will be included in the
               rendered XML
               NOT REQUIRED default: false -->
            <element name="indexWorkflowInfo" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- When this is "true", the page which includes this index block will have its
               information also included at the bottom in a "calling-page-data" element
               NOT REQUIRED default: false -->
            <element name="appendCallingPageData" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <!-- How to sort the folder contents when rendering the XML content
               NOT REQUIRED default: "folder-order" for folder index blocks and "alphabetical" for content type index blocks -->
            <element name="sortMethod" minOccurs="0" maxOccurs="1" type="impl:index-block-sort-method"/>
            <!-- In what order to sort the assets in the index block
                 NOT REQUIRED default: "ascending" -->
            <element name="sortOrder" minOccurs="0" maxOccurs="1" type="impl:index-block-sort-order"/>
            <!-- The Page XML rendering option
                 NOT REQUIRED default: "no-render" -->
            <element name="pageXML" minOccurs="0" maxOccurs="1" type="impl:index-block-page-xml"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- for indexBlock's sortMethod property -->
    <simpleType name="index-block-sort-method">
      <restriction base="xsd:string">
        <enumeration value="folder-order"/>
        <enumeration value="alphabetical"/>
        <enumeration value="last-modified-date"/>
        <enumeration value="created-date"/>
      </restriction>
    </simpleType>

    <!--  for the indexBlock's indexBlockType property -->
    <simpleType name="index-block-type">
      <restriction base="xsd:string">
          <enumeration value="folder"/>
          <enumeration value="content-type"/>
      </restriction>
    </simpleType>

    <!--  for indexBlock's sortOrder property -->
     <simpleType name="index-block-sort-order">
          <restriction base="xsd:string">
              <enumeration value="ascending"/>
              <enumeration value="descending"/>
          </restriction>
        </simpleType>

        <!-- for indexBlock's pageXML property -->
        <simpleType name="index-block-page-xml">
      <restriction base="xsd:string">
        <enumeration value="no-render"/>
        <enumeration value="render"/>
        <enumeration value="render-current-page-only"/>
      </restriction>
        </simpleType>

        <!-- For indexBlock's renderingBehavior property -->
        <simpleType name="index-block-rendering-behavior">
      <restriction base="xsd:string">
        <enumeration value="render-normally"/>
        <enumeration value="hierarchy"/>
        <enumeration value="hierarchy-with-siblings"/>
        <enumeration value="hierarchy-siblings-forward"/>
      </restriction>
        </simpleType>

    <!-- A block which aggregates a URL as an XML feed -->
    <complexType name="feedBlock">
      <complexContent>
        <extension base="impl:block">
          <sequence>
            <!-- The URL of an XML feed
               REQUIRED -->
            <element name="feedURL" minOccurs="1" maxOccurs="1" type="xsd:anyURI"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- A block containing plain text -->
    <complexType name="textBlock">
      <complexContent>
        <extension base="impl:block">
          <sequence>
            <!-- the text of the block
               REQUIRED -->
            <element name="text" minOccurs="1" maxOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- A block containing plain XML -->
    <complexType name="xmlBlock">
      <complexContent>
        <extension base="impl:block">
          <sequence>
            <!-- The XML content of the block
               REQUIRED -->
            <element name="xml" minOccurs="1" maxOccurs="1" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- A block containing plain XHTML or Structured Data-->
    <complexType name="xhtmlDataDefinitionBlock">
      <complexContent>
        <extension base="impl:block">
          <sequence>
            <!-- A choice between structured data and xhtml content
               Priority: xhtml > structuredData
               One is REQUIRED -->
            <element name="structuredData" maxOccurs="1" minOccurs="0" type="impl:structured-data"/>
            <element name="xhtml" maxOccurs="1" minOccurs="0" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="twitterFeedBlock">
      <complexContent>
        <extension base="impl:block">
          <sequence>
            <!-- The Account Name of the block
              Required for Tweets Only and Tweets and Mentions query types -->
            <element name="accountName" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <!-- The Search String for the block
              Required for Tweets Only and Tweets and Mentions search terms types-->
            <element name="searchString" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <!-- The maximum number of tweets which can be shown
              REQUIRED-->
            <element name="maxResults" minOccurs="1" maxOccurs="1" type="xsd:nonNegativeInteger"/>
            <!-- Should the twitter feed block use the default CSS style?
              REQUIRED -->
            <element name="useDefaultStyle" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <!--  Should the twitter feed block include the JQuery API -->
            <element name="excludeJQuery" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
            <!-- The type of twitter feed block
               REQUIRED -->
            <element name="queryType" minOccurs="1" maxOccurs="1" type="impl:twitter-query-type"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <simpleType name="twitter-query-type">
      <restriction base="xsd:string">
        <enumeration value="user-only" />
        <enumeration value="users-and-mentions" />
        <enumeration value="search-terms" />
      </restriction>
    </simpleType>

    <!-- End concrete block types -->
    <!-- End types that extend expiring-asset -->

    <complexType name="publishable-asset">
      <complexContent>
        <extension base="impl:expiring-asset">
          <sequence>
            <!-- Whether or not this asset can be published
               NOT REQUIRED default: true -->
            <element name="shouldBePublished" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- Whether or not this asset can be indexed
               NOT REQUIRED default: true -->
            <element name="shouldBeIndexed" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
            <!-- The last date this asset was published
               NOT REQUIRED -->
            <element name="lastPublishedDate" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:dateTime"/>
            <!-- Who last published this asset
               NOT REQUIRED -->
            <element name="lastPublishedBy" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- BEGIN Page and associated structured data types -->

    <complexType name="page">
      <complexContent>
        <extension base="impl:publishable-asset">
          <sequence>
            <!-- For defining the configuration set or content type relationship.
               Priority: (contentTypeId > contentTypePath) > (configurationSetId > configurationSetPath)
               One is REQUIRED -->
            <element name="configurationSetId" maxOccurs="1" minOccurs="0" type="xsd:string" />
            <element name="configurationSetPath" maxOccurs="1" minOccurs="0" type="xsd:string" />
            <element name="contentTypeId" maxOccurs="1" minOccurs="0" type="xsd:string" />
            <element name="contentTypePath" maxOccurs="1" minOccurs="0" type="xsd:string" />

            <!-- A page either contains XHTML content (plain WYSIWYG page) or structured data content
               Proprity: xhtml > structuredData
               One is REQUIRED -->
            <element name="structuredData" maxOccurs="1" minOccurs="0" type="impl:structured-data"/>
            <element name="xhtml" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- The page configurations containing page-level region block/format assignments
               NOT REQUIRED when creating a page, but you must submit assignment information when editing
               if you want to maintain the region assignments -->
            <element name="pageConfigurations" minOccurs="0" maxOccurs="1" nillable="false" type="impl:page-configurations"/>

            <!-- NOT REQUIRED, default: false -->
            <element name="maintainAbsoluteLinks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- page structured data information -->
    <complexType name="structured-data">
      <sequence>
        <!-- For defining an asset's Data Definition relationship
           Priority: definitionId > definitionPath
           NOT REQUIRED -->
        <element name="definitionId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="definitionPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

        <element name="structuredDataNodes" minOccurs="0" maxOccurs="1" type="impl:structured-data-nodes"/>
      </sequence>
    </complexType>

    <!-- An array of structured data nodes -->
    <complexType name="structured-data-nodes">
      <sequence>
        <element name="structuredDataNode" minOccurs="0" maxOccurs="unbounded" type="impl:structured-data-node"/>
      </sequence>
    </complexType>

    <!-- A single structured data node -->
    <complexType name="structured-data-node">
      <sequence>
        <!-- Each node has a type -->
        <element name="type" minOccurs="1" maxOccurs="1" type="impl:structured-data-type"/>

        <!-- The text identifier of the node coming from corresponding field in Data Definition. If this node is preserved on the asset but
           corresponding field no longer exists in Data Definition, the identifier's value will be "<legacy>". -->
        <element name="identifier" minOccurs="1" maxOccurs="1" type="xsd:string"/>

        <!-- REQUIRED if type is "group" -->
        <element name="structuredDataNodes" minOccurs="0" maxOccurs="1" type="impl:structured-data-nodes"/>

        <!-- REQUIRED if type is "text" -->
        <element name="text" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- REQUIRED if type is "asset" -->
        <element name="assetType" minOccurs="0" maxOccurs="1" type="impl:structured-data-asset-type"/>
        <!-- Assets that exist in a recycle bin will not be matched by path but id only. -->

        <!-- If assetType=block, one of blockId or blockPath should be provided if asset is selected for this node -->
        <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
           in case if the selected asset gets restored from the recycle bin. -->
        <element name="blockId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- Path works only for non-recycled assets -->
        <element name="blockPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- If assetType=file, one of fileId or filePath should be provided if asset is selected for this node -->
        <!-- If assetType=linkable, fileId or filePath should be populated if the selected linkable asset is a file -->
        <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
           in case if the selected asset gets restored from the recycle bin. -->
        <element name="fileId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- Path works only for non-recycled assets -->
        <element name="filePath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- If assetType=page, one of pageId or pagePath should be provided if asset is selected for this node -->
        <!-- If assetType=linkable, pageId or pagePath should be populated if the selected linkable asset is a page -->
        <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
           in case if the selected asset gets restored from the recycle bin. -->
        <element name="pageId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- Path works only for non-recycled assets -->
        <element name="pagePath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- If assetType=symlink, one of symlinkId or symlinkPath should be provided if asset is selected for this node -->
        <!-- If assetType=linkable, symlinkId or symlinkPath should be populated if the selected linkable asset is a symlink -->
        <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
           in case if the selected asset gets restored from the recycle bin. -->
        <element name="symlinkId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <!-- Path works only for non-recycled assets -->
        <element name="symlinkPath" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- Recycled - true if selected asset is recycled.
           Use for reading only - this attribute is not necessary when editing or creating and will not affect these operations if provided.
           When editing or creating and selecting a recycled asset, id of the asset should be provided (blockId instead of blockPath, fileId instead of filePath etc.).
           If path is provided, Cascade will look only for a non-recycled asset with given path even if "recycled=true" is provided. -->
        <element name="recycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <!-- The different types of a structured data node -->
    <simpleType name="structured-data-type">
      <restriction base="xsd:string">
        <enumeration value="text"/>
        <enumeration value="asset"/>
        <enumeration value="group"/>
      </restriction>
    </simpleType>

    <!-- The different types of assets a structured data
       node can contain -->
    <simpleType name="structured-data-asset-type">
      <restriction base="xsd:string">
        <enumeration value="block"/>
        <enumeration value="file"/>
        <enumeration value="page"/>
        <enumeration value="symlink"/>
        <enumeration value="page,file,symlink"/>
      </restriction>
    </simpleType>

    <!-- END Page and associated structured data types -->

    <complexType name="folder">
      <complexContent>
        <extension base="impl:publishable-asset">
          <sequence>
            <!-- the array of children -->
            <element name="children" maxOccurs="1" minOccurs="0" nillable="true" type="impl:container-children"/>
            <element name="includeInStaleContent" maxOccurs="1" minOccurs="0" type="xsd:boolean"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- an entity type contains a string, "name" which is a constant
       that defines an asset's type -->
    <complexType name="entity-type">
      <sequence>
        <element name="name" maxOccurs="1" minOccurs="1" type="impl:entityTypeString"/>
      </sequence>
    </complexType>

    <!-- wrapper for an array of folder children (identifiers) -->
    <complexType name="container-children">
      <sequence>
        <element name="child" minOccurs="0" maxOccurs="unbounded" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="file">
      <complexContent>
        <extension base="impl:publishable-asset">
          <sequence>
            <!-- A file either contains plaintext content or
               binary content (base64 encoded)
               Priority: text > data
               One is REQUIRED -->
            <element name="text" minOccurs="0" maxOccurs="1" type="xsd:string"/>
            <element name="data" minOccurs="0" maxOccurs="1" type="xsd:base64Binary"/>

            <element name="rewriteLinks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
            <element name="maintainAbsoluteLinks" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="editorConfiguration">
      <complexContent>
        <extension base="impl:named-asset">
          <sequence>
            <!-- The Site in which the asset is located
                 NOT REQUIRED when referencing the System Default Editor Configuration (id=DEFAULT, name=Default)
                 One is REQUIRED for all other Editor Configurations -->
            <element name="siteId" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>
            <element name="siteName" maxOccurs="1" minOccurs="0" nillable="true" type="xsd:string"/>

            <!-- File containing css for the WYSIWYG editor
                 Priority: cssFileId > cssFilePath
                 NOT REQUIRED -->
            <!-- When editing and selected asset is recycled, it is recommended to preserve this relationship by providing selected asset's id
                in case if the selected asset gets restored from the recycle bin. -->
            <element name="cssFileId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
            <!-- Path works only for non-recycled assets -->
            <element name="cssFilePath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

            <!-- NOT REQUIRED: For reading purposes only. Ignored when editing, copying etc. -->
            <element name="cssFileRecycled" minOccurs="0" maxOccurs="1" type="xsd:boolean"/>

            <!-- JSON String for the configuration -->
            <element name="configuration" maxOccurs="1" minOccurs="1" nillable="false" type="xsd:string"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <!-- asset is an aggregate type that includes all possible Cascade Server assets
       bundled with workflow configuration. When a user does not have the priveleges to bypass
       workflow, this configuration is used to configure the step assignments of the workflow -->
    <complexType name="asset">
      <sequence>
        <element name="workflowConfiguration" maxOccurs="1" minOccurs="0"
          type="impl:workflow-configuration"/>
        <choice>
          <element name="feedBlock" minOccurs="1" maxOccurs="1" nillable="true" type="impl:feedBlock"/>
          <element name="indexBlock" minOccurs="1" maxOccurs="1" nillable="true" type="impl:indexBlock"/>
          <element name="textBlock" minOccurs="1" maxOccurs="1" nillable="true" type="impl:textBlock"/>
          <element name="xhtmlDataDefinitionBlock" minOccurs="1" maxOccurs="1" nillable="true" type="impl:xhtmlDataDefinitionBlock"/>
          <element name="xmlBlock" minOccurs="1" maxOccurs="1" nillable="true" type="impl:xmlBlock"/>
          <element name="file" minOccurs="1" maxOccurs="1" nillable="true" type="impl:file"/>
          <element name="folder" minOccurs="1" maxOccurs="1" nillable="true" type="impl:folder"/>
          <element name="page" minOccurs="1" maxOccurs="1" nillable="true" type="impl:page"/>
          <element name="reference" minOccurs="1" maxOccurs="1" nillable="true" type="impl:reference"/>
          <element name="xsltFormat" minOccurs="1" maxOccurs="1" nillable="true" type="impl:xsltFormat"/>
          <element name="scriptFormat" minOccurs="1" maxOccurs="1" nillable="true" type="impl:scriptFormat"/>
          <element name="symlink" minOccurs="1" maxOccurs="1" nillable="true" type="impl:symlink"/>
          <element name="template" minOccurs="1" maxOccurs="1" nillable="true" type="impl:template"/>
          <!-- admin area assets (must be manager or higher to access,
             no workflowConfiguration needed -->
          <element name="user" minOccurs="1" maxOccurs="1" nillable="true" type="impl:user"/>
          <element name="group" minOccurs="1" maxOccurs="1" nillable="true" type="impl:group"/>
          <element name="role" minOccurs="1" maxOccurs="1" nillable="true" type="impl:role"/>
          <element name="assetFactory" minOccurs="1" maxOccurs="1" nillable="true" type="impl:assetFactory"/>
          <element name="assetFactoryContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:assetFactoryContainer"/>
          <element name="contentType" minOccurs="1" maxOccurs="1" nillable="true" type="impl:contentType"/>
          <element name="contentTypeContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:contentTypeContainer"/>
          <element name="connectorContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:connectorContainer"/>
          <element name="twitterConnector" minOccurs="1" maxOccurs="1" nillable="true" type="impl:twitterConnector"/>
          <element name="facebookConnector" minOccurs="1" maxOccurs="1" nillable="true" type="impl:facebookConnector"/>
          <element name="wordPressConnector" minOccurs="1" maxOccurs="1" nillable="true" type="impl:wordPressConnector"/>
          <element name="googleAnalyticsConnector" minOccurs="1" maxOccurs="1" nillable="true" type="impl:googleAnalyticsConnector"/>
          <element name="pageConfigurationSet" minOccurs="1" maxOccurs="1" nillable="true" type="impl:pageConfigurationSet"/>
          <element name="pageConfigurationSetContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:pageConfigurationSetContainer"/>
          <element name="dataDefinition" minOccurs="1" maxOccurs="1" nillable="true" type="impl:dataDefinition"/>
          <element name="dataDefinitionContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:dataDefinitionContainer"/>
          <element name="sharedField" minOccurs="1" maxOccurs="1" nillable="true" type="impl:sharedField"/>
          <element name="sharedFieldContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:sharedFieldContainer"/>
          <element name="metadataSet" minOccurs="1" maxOccurs="1" nillable="true" type="impl:metadataSet"/>
          <element name="metadataSetContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:metadataSetContainer"/>
          <element name="publishSet" minOccurs="1" maxOccurs="1" nillable="true" type="impl:publishSet"/>
          <element name="publishSetContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:publishSetContainer"/>
          <element name="target" minOccurs="1" maxOccurs="1" nillable="true" type="impl:target"/>
          <element name="siteDestinationContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:siteDestinationContainer"/>
          <element name="destination" minOccurs="1" maxOccurs="1" nillable="true" type="impl:destination"/>
          <element name="fileSystemTransport" minOccurs="1" maxOccurs="1" nillable="true" type="impl:fileSystemTransport"/>
          <element name="ftpTransport" minOccurs="1" maxOccurs="1" nillable="true" type="impl:ftpTransport"/>
          <element name="databaseTransport" minOccurs="1" maxOccurs="1" nillable="true" type="impl:databaseTransport"/>
          <element name="cloudTransport" minOccurs="1" maxOccurs="1" nillable="true" type="impl:cloudTransport"/>
          <element name="transportContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:transportContainer"/>
          <element name="workflowDefinition" minOccurs="1" maxOccurs="1" nillable="true" type="impl:workflowDefinition"/>
          <element name="workflowDefinitionContainer" minOccurs="1" maxOccurs="1" nillable="true" type="impl:workflowDefinitionContainer"/>
          <element name="twitterFeedBlock" minOccurs="1" maxOccurs="1" nillable="true" type="impl:twitterFeedBlock"/>
          <!-- other assets -->
          <element name="site" minOccurs="1" maxOccurs="1" nillable="true" type="impl:site"/>
          <element name="editorConfiguration" minOccurs="1" maxOccurs="1" nillable="true" type="impl:editorConfiguration"/>
        </choice>
      </sequence>
    </complexType>

    <!-- For configuring workflow -->

    <complexType name="workflow-configuration">
      <sequence>
        <!-- When the workflow is instantiated, this will be its name
           REQUIRED -->
        <element name="workflowName" maxOccurs="1" minOccurs="1" type="xsd:string"/>

        <!-- Which workflow definition to use
           Priority: workflowDefinitionId > workflowDefinitionPath
           One is REQUIRED -->
        <element name="workflowDefinitionId" maxOccurs="1" minOccurs="0" type="xsd:string"/>
        <element name="workflowDefinitionPath" maxOccurs="1" minOccurs="0" type="xsd:string"/>

        <!-- The comments for this operation which will be recorded with the workflow
           REQUIRED -->
        <element name="workflowComments" maxOccurs="1" minOccurs="1" type="xsd:string"/>
        <!-- The optional step configurations for each assignable step in the workflow
           NOT REQUIRED default: the defaults as definined in the workflow definition -->
        <element name="workflowStepConfigurations" minOccurs="0" maxOccurs="1" type="impl:workflow-step-configurations"/>
        <!-- Optional due date for the workflow.  If not specified, will default to 7 days from today -->
        <element name="endDate" minOccurs="0" maxOccurs="1" type="xsd:dateTime"/>
      </sequence>
    </complexType>

    <!-- An array of workflow step configuration objects -->
    <complexType name="workflow-step-configurations">
      <sequence>
        <element name="workflowStepConfiguration" maxOccurs="unbounded" type="impl:workflow-step-configuration"/>
      </sequence>
    </complexType>

    <!-- A single step configuration -->
    <complexType name="workflow-step-configuration">
      <sequence>
        <!-- the step's unique text identifier/name
           REQUIRED -->
        <element name="stepIdentifier" minOccurs="1" maxOccurs="1" type="xsd:string"/>
        <!-- The step's assignment (user or group name)
           REQUIRED -->
        <element name="stepAssignment" minOccurs="1" maxOccurs="1" type="xsd:string"/>
      </sequence>
    </complexType>


    <!-- End workflow configuration items -->

    <!-- the actual operations for inclusion in a batch op -->

    <complexType name="create">
      <sequence>
        <element name="asset" minOccurs="1" maxOccurs="1" type="impl:asset"/>
      </sequence>
    </complexType>

    <complexType name="delete">
      <sequence>
        <element name="workflowConfiguration" minOccurs="0" maxOccurs="1" type="impl:workflow-configuration"/>
        <element name="identifier" minOccurs="1" maxOccurs="1" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="edit">
      <sequence>
        <element name="asset" maxOccurs="1" minOccurs="1" type="impl:asset"/>
      </sequence>
    </complexType>

    <complexType name="move">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        <element name="moveParameters" minOccurs="1" maxOccurs="1" nillable="false" type="impl:moveParameters"/>
        <element name="workflowConfiguration" minOccurs="0" maxOccurs="1" nillable="false" type="impl:workflow-configuration"/>
      </sequence>
    </complexType>

    <complexType name="publish">
      <sequence>
        <element name="publishInformation" minOccurs="1" maxOccurs="1" type="impl:publishInformation"/>
      </sequence>
    </complexType>

    <complexType name="publishInformation">
      <sequence>
        <!-- Identifier of the asset being published
             REQUIRED -->
        <element name="identifier" minOccurs="1" maxOccurs="1" type="impl:identifier"/>
        <!-- This field is Ignored when identifier (above) points to a Destination
             Publishing an asset that does not allow you to select Destinations in the Cascade UI (Publish Set or Target) *will* respect the Destinations
             supplied here (this is an inconsistency between the UI and web services).  Supplying an empty set of identifiers will publish to all Destinations
             that are enabled and applicable for the user making the web services call. -->
        <element name="destinations" minOccurs="0" maxOccurs="1" nillable="false" type="impl:assetIdentifiers"/>

        <!-- Similar to the GUI - you can choose to unpublish the asset instead of publishing it. Not required. Default: false -->
        <element name="unpublish"  minOccurs="0" maxOccurs="1" nillable="true" type="xsd:boolean"/>
        <element name="publishRelatedAssets" minOccurs="0" maxOccurs="1" nillable="true" type="xsd:boolean"/>
        <element name="publishRelatedPublishSet" minOccurs="0" maxOccurs="1" nillable="true" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <complexType name="read">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="readAccessRights">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="editAccessRights">
      <sequence>
        <element name="accessRightsInformation" minOccurs="1" maxOccurs="1" nillable="true" type="impl:accessRightsInformation"/>
        <!-- not required for non-folders/non-containers. default is false -->
        <element name="applyToChildren" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <complexType name="readWorkflowSettings">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="editWorkflowSettings">
      <sequence>
        <element name="workflowSettings" minOccurs="1" maxOccurs="1" nillable="true" type="impl:workflowSettings"/>
        <!-- NOT REQUIRED, default is false -->
        <element name="applyInheritWorkflowsToChildren" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>
        <!-- NOT REQUIRED, default is false -->
        <element name="applyRequireWorkflowToChildren" minOccurs="0" maxOccurs="1" nillable="false" type="xsd:boolean"/>
      </sequence>
    </complexType>

    <complexType name="listSubscribers">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="checkOut">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="checkIn">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
      </sequence>
    </complexType>

    <complexType name="copy">
      <sequence>
        <element name="identifier" minOccurs="1" maxOccurs="1" nillable="false" type="impl:identifier"/>
        <element name="copyParameters" minOccurs="1" maxOccurs="1" nillable="false" type="impl:copyParameters"/>
        <element name="workflowConfiguration" minOccurs="0" maxOccurs="1" nillable="false" type="impl:workflow-configuration"/>
      </sequence>
    </complexType>

    <complexType name="siteCopy">
      <sequence>
        <!-- ONE REQUIRED: The id or name of the site that needs to be copied. If both id and name is provided, id will be used. -->
        <element name="originalSiteId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
        <element name="originalSiteName" minOccurs="0" maxOccurs="1" type="xsd:string"/>

        <!-- REQUIRED: The name of the new site -->
        <element name="newSiteName" minOccurs="1" maxOccurs="1" nillable="false" type="xsd:string"/>
      </sequence>
    </complexType>

    <complexType name="operation">
      <choice>
        <element name="create" type="impl:create"/>
        <element name="delete" type="impl:delete"/>
        <element name="edit" type="impl:edit"/>
        <element name="move" type="impl:move"/>
        <element name="publish" type="impl:publish"/>
        <element name="read" type="impl:read"/>
        <element name="readAccessRights" type="impl:readAccessRights"/>
        <element name="editAccessRights" type="impl:editAccessRights"/>
        <element name="readWorkflowSettings" type="impl:readWorkflowSettings"/>
        <element name="editWorkflowSettings" type="impl:editWorkflowSettings"/>
        <element name="listSubscribers" type="impl:listSubscribers"/>
        <element name="checkOut" type="impl:checkOut"/>
        <element name="checkIn" type="impl:checkIn"/>
        <element name="copy" type="impl:copy"/>
        <element name="siteCopy" type="impl:siteCopy"/>
      </choice>
    </complexType>

    <!-- end operations -->

  </schema>
 </wsdl:types>

   <!-- The individual WSDL messages. not much to see below here -->

   <wsdl:message name="batchRequest">
      <wsdl:part element="impl:batch" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="batchResponse">
      <wsdl:part element="impl:batchResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="createRequest">
      <wsdl:part element="impl:create" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="createResponse">
      <wsdl:part element="impl:createResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="deleteRequest">
      <wsdl:part element="impl:delete" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="deleteResponse">
      <wsdl:part element="impl:deleteResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="editRequest">
      <wsdl:part element="impl:edit" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="editResponse">
      <wsdl:part element="impl:editResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="publishRequest">
      <wsdl:part element="impl:publish" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="publishResponse">
      <wsdl:part element="impl:publishResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readRequest">
     <wsdl:part element="impl:read" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readResponse">
     <wsdl:part element="impl:readResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="searchRequest">
     <wsdl:part element="impl:search" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="searchResponse">
     <wsdl:part element="impl:searchResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readAccessRightsRequest">
     <wsdl:part element="impl:readAccessRights" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readAccessRightsResponse">
     <wsdl:part element="impl:readAccessRightsResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="editAccessRightsRequest">
     <wsdl:part element="impl:editAccessRights" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="editAccessRightsResponse">
     <wsdl:part element="impl:editAccessRightsResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readWorkflowSettingsRequest">
     <wsdl:part element="impl:readWorkflowSettings" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readWorkflowSettingsResponse">
     <wsdl:part element="impl:readWorkflowSettingsResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="editWorkflowSettingsRequest">
     <wsdl:part element="impl:editWorkflowSettings" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="editWorkflowSettingsResponse">
     <wsdl:part element="impl:editWorkflowSettingsResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="listSubscribersRequest">
     <wsdl:part element="impl:listSubscribers" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="listSubscribersResponse">
     <wsdl:part element="impl:listSubscribersResponse" name="parameters"/>
   </wsdl:message>

  <wsdl:message name="listEditorConfigurationsRequest">
    <wsdl:part element="impl:listEditorConfigurations" name="parameters"/>
  </wsdl:message>

  <wsdl:message name="listEditorConfigurationsResponse">
    <wsdl:part element="impl:listEditorConfigurationsResponse" name="parameters"/>
  </wsdl:message>

   <wsdl:message name="listMessagesRequest">
     <wsdl:part element="impl:listMessages" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="listMessagesResponse">
     <wsdl:part element="impl:listMessagesResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="markMessageRequest">
     <wsdl:part element="impl:markMessage" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="markMessageResponse">
     <wsdl:part element="impl:markMessageResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="deleteMessageRequest">
     <wsdl:part element="impl:deleteMessage" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="deleteMessageResponse">
     <wsdl:part element="impl:deleteMessageResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="sendMessageRequest">
     <wsdl:part element="impl:sendMessage" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="sendMessageResponse">
     <wsdl:part element="impl:sendMessageResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="checkOutRequest">
     <wsdl:part element="impl:checkOut" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="checkOutResponse">
     <wsdl:part element="impl:checkOutResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="checkInRequest">
     <wsdl:part element="impl:checkIn" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="checkInResponse">
     <wsdl:part element="impl:checkInResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="copyRequest">
     <wsdl:part element="impl:copy" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="copyResponse">
     <wsdl:part element="impl:copyResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="siteCopyRequest">
     <wsdl:part element="impl:siteCopy" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="siteCopyResponse">
     <wsdl:part element="impl:siteCopyResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="listSitesRequest">
     <wsdl:part element="impl:listSites" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="listSitesResponse">
     <wsdl:part element="impl:listSitesResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="moveRequest">
     <wsdl:part element="impl:move" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="moveResponse">
     <wsdl:part element="impl:moveResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readWorkflowInformationRequest">
     <wsdl:part element="impl:readWorkflowInformation" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readWorkflowInformationResponse">
     <wsdl:part element="impl:readWorkflowInformationResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readAuditsRequest">
     <wsdl:part element="impl:readAudits" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readAuditsResponse">
     <wsdl:part element="impl:readAuditsResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="performWorkflowTransitionRequest">
     <wsdl:part element="impl:performWorkflowTransition" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="performWorkflowTransitionResponse">
     <wsdl:part element="impl:performWorkflowTransitionResponse" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readPreferencesRequest">
     <wsdl:part element="impl:readPreferences" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="readPreferencesResponse">
     <wsdl:part element="impl:readPreferencesResponse" name="parameters"/>
   </wsdl:message>

    <wsdl:message name="editPreferenceRequest">
     <wsdl:part element="impl:editPreference" name="parameters"/>
   </wsdl:message>

   <wsdl:message name="editPreferenceResponse">
     <wsdl:part element="impl:editPreferenceResponse" name="parameters"/>
   </wsdl:message>

   <!-- describe the AssetOperationHandler port -->
   <wsdl:portType name="AssetOperationHandler">

      <wsdl:operation name="delete">
         <wsdl:input message="impl:deleteRequest" name="deleteRequest"/>
         <wsdl:output message="impl:deleteResponse" name="deleteResponse"/>
      </wsdl:operation>

      <wsdl:operation name="create">
         <wsdl:input message="impl:createRequest" name="createRequest"/>
         <wsdl:output message="impl:createResponse" name="createResponse"/>
      </wsdl:operation>

      <wsdl:operation name="publish">
         <wsdl:input message="impl:publishRequest" name="publishRequest"/>
         <wsdl:output message="impl:publishResponse" name="publishResponse"/>
      </wsdl:operation>

      <wsdl:operation name="edit">
         <wsdl:input message="impl:editRequest" name="editRequest"/>
         <wsdl:output message="impl:editResponse" name="editResponse"/>
      </wsdl:operation>

      <wsdl:operation name="batch">
         <wsdl:input message="impl:batchRequest" name="batchRequest"/>
         <wsdl:output message="impl:batchResponse" name="batchResponse"/>
      </wsdl:operation>

      <wsdl:operation name="read">
      <wsdl:input message="impl:readRequest" name="readRequest"/>
      <wsdl:output message="impl:readResponse" name="readResponse"/>
    </wsdl:operation>

      <wsdl:operation name="search">
      <wsdl:input message="impl:searchRequest" name="searchRequest"/>
      <wsdl:output message="impl:searchResponse" name="searchResponse"/>
    </wsdl:operation>

      <wsdl:operation name="readAccessRights">
      <wsdl:input message="impl:readAccessRightsRequest" name="readAccessRightsRequest"/>
      <wsdl:output message="impl:readAccessRightsResponse" name="readAccessRightsResponse"/>
    </wsdl:operation>

      <wsdl:operation name="editAccessRights">
      <wsdl:input message="impl:editAccessRightsRequest" name="editAccessRightsRequest"/>
      <wsdl:output message="impl:editAccessRightsResponse" name="editAccessRightsResponse"/>
    </wsdl:operation>

      <wsdl:operation name="readWorkflowSettings">
      <wsdl:input message="impl:readWorkflowSettingsRequest" name="readWorkflowSettingsRequest"/>
      <wsdl:output message="impl:readWorkflowSettingsResponse" name="readWorkflowSettingsResponse"/>
    </wsdl:operation>

      <wsdl:operation name="editWorkflowSettings">
      <wsdl:input message="impl:editWorkflowSettingsRequest" name="editWorkflowSettingsRequest"/>
      <wsdl:output message="impl:editWorkflowSettingsResponse" name="editWorkflowSettingsResponse"/>
    </wsdl:operation>

      <wsdl:operation name="listSubscribers">
      <wsdl:input message="impl:listSubscribersRequest" name="listSubscribersRequest"/>
      <wsdl:output message="impl:listSubscribersResponse" name="listSubscribersResponse"/>
    </wsdl:operation>

     <wsdl:operation name="listEditorConfigurations">
       <wsdl:input message="impl:listEditorConfigurationsRequest" name="listEditorConfigurationsRequest"/>
       <wsdl:output message="impl:listEditorConfigurationsResponse" name="listEditorConfigurationsResponse"/>
     </wsdl:operation>

      <wsdl:operation name="listMessages">
      <wsdl:input message="impl:listMessagesRequest" name="listMessagesRequest"/>
      <wsdl:output message="impl:listMessagesResponse" name="listMessagesResponse"/>
    </wsdl:operation>

      <wsdl:operation name="markMessage">
      <wsdl:input message="impl:markMessageRequest" name="markMessageRequest"/>
      <wsdl:output message="impl:markMessageResponse" name="markMessageResponse"/>
    </wsdl:operation>

      <wsdl:operation name="deleteMessage">
      <wsdl:input message="impl:deleteMessageRequest" name="deleteMessageRequest"/>
      <wsdl:output message="impl:deleteMessageResponse" name="deleteMessageResponse"/>
    </wsdl:operation>

      <wsdl:operation name="sendMessage">
      <wsdl:input message="impl:sendMessageRequest" name="sendMessageRequest"/>
      <wsdl:output message="impl:sendMessageResponse" name="sendMessageResponse"/>
    </wsdl:operation>

      <wsdl:operation name="checkOut">
      <wsdl:input message="impl:checkOutRequest" name="checkOutRequest"/>
      <wsdl:output message="impl:checkOutResponse" name="checkOutResponse"/>
    </wsdl:operation>

      <wsdl:operation name="checkIn">
      <wsdl:input message="impl:checkInRequest" name="checkInRequest"/>
      <wsdl:output message="impl:checkInResponse" name="checkInResponse"/>
    </wsdl:operation>

      <wsdl:operation name="copy">
      <wsdl:input message="impl:copyRequest" name="copyRequest"/>
      <wsdl:output message="impl:copyResponse" name="copyResponse"/>
    </wsdl:operation>

      <wsdl:operation name="siteCopy">
      <wsdl:input message="impl:siteCopyRequest" name="siteCopyRequest"/>
      <wsdl:output message="impl:siteCopyResponse" name="siteCopyResponse"/>
    </wsdl:operation>

      <wsdl:operation name="listSites">
      <wsdl:input message="impl:listSitesRequest" name="listSitesRequest"/>
      <wsdl:output message="impl:listSitesResponse" name="listSitesResponse"/>
    </wsdl:operation>

    <wsdl:operation name="move">
      <wsdl:input message="impl:moveRequest" name="moveRequest"/>
      <wsdl:output message="impl:moveResponse" name="moveResponse"/>
    </wsdl:operation>

    <wsdl:operation name="readWorkflowInformation">
      <wsdl:input message="impl:readWorkflowInformationRequest" name="readWorkflowInformationRequest"/>
      <wsdl:output message="impl:readWorkflowInformationResponse" name="readWorkflowInformationResponse"/>
    </wsdl:operation>

    <wsdl:operation name="readAudits">
      <wsdl:input message="impl:readAuditsRequest" name="readAuditsRequest"/>
      <wsdl:output message="impl:readAuditsResponse" name="readAuditsResponse"/>
    </wsdl:operation>

    <wsdl:operation name="performWorkflowTransition">
      <wsdl:input message="impl:performWorkflowTransitionRequest" name="performWorkflowTransitionRequest"/>
      <wsdl:output message="impl:performWorkflowTransitionResponse" name="performWorkflowTransitionResponse"/>
    </wsdl:operation>

    <wsdl:operation name="readPreferences">
      <wsdl:input message="impl:readPreferencesRequest" name="readPreferencesRequest"/>
      <wsdl:output message="impl:readPreferencesResponse" name="readPreferencesResponse"/>
    </wsdl:operation>

    <wsdl:operation name="editPreference">
      <wsdl:input message="impl:editPreferenceRequest" name="editPreferenceRequest"/>
      <wsdl:output message="impl:editPreferenceResponse" name="editPreferenceResponse"/>
    </wsdl:operation>

   </wsdl:portType>

   <!-- Bind the AssetOperationServiceHandler -->
   <wsdl:binding name="AssetOperationServiceSoapBinding" type="impl:AssetOperationHandler">
      <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>

    <wsdl:operation name="batch">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="batchRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="batchResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="create">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="createRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="createResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="delete">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="deleteRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="deleteResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="edit">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="editRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="editResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="publish">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="publishRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="publishResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="read">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="readRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="readResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="search">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="searchRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="searchResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="readAccessRights">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="readAccessRightsRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="readAccessRightsResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="editAccessRights">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="editAccessRightsRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="editAccessRightsResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="readWorkflowSettings">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="readWorkflowSettingsRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="readWorkflowSettingsResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="editWorkflowSettings">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="editWorkflowSettingsRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="editWorkflowSettingsResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="listSubscribers">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="listSubscribersRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="listSubscribersResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

     <wsdl:operation name="listEditorConfigurations">
       <wsdlsoap:operation soapAction=""/>
       <wsdl:input name="listEditorConfigurationsRequest">
         <wsdlsoap:body use="literal"/>
       </wsdl:input>
       <wsdl:output name="listEditorConfigurationsResponse">
         <wsdlsoap:body use="literal"/>
       </wsdl:output>
     </wsdl:operation>

      <wsdl:operation name="listMessages">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="listMessagesRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="listMessagesResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="markMessage">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="markMessageRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="markMessageResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="deleteMessage">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="deleteMessageRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="deleteMessageResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="sendMessage">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="sendMessageRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="sendMessageResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="checkOut">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="checkOutRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="checkOutResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="checkIn">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="checkInRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="checkInResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="copy">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="copyRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="copyResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="siteCopy">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="siteCopyRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="siteCopyResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="listSites">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="listSitesRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="listSitesResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

      <wsdl:operation name="move">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="moveRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="moveResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="readWorkflowInformation">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="readWorkflowInformationRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="readWorkflowInformationResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="readAudits">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="readAuditsRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="readAuditsResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="performWorkflowTransition">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="performWorkflowTransitionRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="performWorkflowTransitionResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

       <wsdl:operation name="readPreferences">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="readPreferencesRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="readPreferencesResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

    <wsdl:operation name="editPreference">
         <wsdlsoap:operation soapAction=""/>
         <wsdl:input name="editPreferenceRequest">
            <wsdlsoap:body use="literal"/>
         </wsdl:input>
         <wsdl:output name="editPreferenceResponse">
            <wsdlsoap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>

   </wsdl:binding>

   <!-- Make the binding available as a service -->
   <wsdl:service name="AssetOperationHandlerService">
      <wsdl:port binding="impl:AssetOperationServiceSoapBinding" name="AssetOperationService">
         <wsdlsoap:address location="http://localhost:8080/ws/services/AssetOperationService"/>
      </wsdl:port>
   </wsdl:service>
</wsdl:definitions>
